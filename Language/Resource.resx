<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activationDescription" xml:space="preserve">
    <value>click &lt;a href='/signin' &gt;here &lt;/a&gt; to sign in .</value>
  </data>
  <data name="DotpayLogoTitle" xml:space="preserve">
    <value>Dotpay</value>
  </data>
  <data name="Email already exists." xml:space="preserve">
    <value />
  </data>
  <data name="Invlid activation link." xml:space="preserve">
    <value />
  </data>
  <data name="Login fail too much times.You can try again 1 hour later." xml:space="preserve">
    <value />
  </data>
  <data name="Login name already exists." xml:space="preserve">
    <value />
  </data>
  <data name="Login name or password error. You can try {0} times." xml:space="preserve">
    <value />
  </data>
  <data name="Unkown Exception,Please refresh page and retry." xml:space="preserve">
    <value />
  </data>
  <data name="Welcome to dotpay" xml:space="preserve">
    <value />
  </data>
  <data name="Almost free" xml:space="preserve">
    <value />
  </data>
  <data name="Alread have an account?" xml:space="preserve">
    <value />
  </data>
  <data name="As fast as send a email" xml:space="preserve">
    <value />
  </data>
  <data name="ChooseDotpayChooseEasyLife" xml:space="preserve">
    <value>Choose dotpay , Choose easy life</value>
  </data>
  <data name="DotpayDescription" xml:space="preserve">
    <value>Dotpay is xxxx.</value>
  </data>
  <data name="Enjoy our great service" xml:space="preserve">
    <value />
  </data>
  <data name="Forget password?" xml:space="preserve">
    <value />
  </data>
  <data name="indexBannerPayeasyPayCool" xml:space="preserve">
    <value>Make pay easy , Make pay cool.</value>
  </data>
  <data name="loginBtnText" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginFieldPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="loginFieldPasswordPlaceholder" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="loginFieldUserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="loginFieldUserNamePlaceholder" xml:space="preserve">
    <value>Login name or email</value>
  </data>
  <data name="Register to" xml:space="preserve">
    <value />
  </data>
  <data name="registerDotpayDescription" xml:space="preserve">
    <value>You are about 30 seconds away from using Dotpay. Good choice!</value>
  </data>
  <data name="registerFieldConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="registerFieldConfirmPasswordPlaceholder" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="registerFieldEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="registerFieldEmailPlaceholder" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="registerFieldLoginName" xml:space="preserve">
    <value>Login Name</value>
  </data>
  <data name="registerFieldLoginNamePlaceholder" xml:space="preserve">
    <value>Loginname</value>
  </data>
  <data name="registerFieldPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="registerFieldPasswordPlaceholder" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Sign In" xml:space="preserve">
    <value />
  </data>
  <data name="Sign in to" xml:space="preserve">
    <value />
  </data>
  <data name="Sign Up" xml:space="preserve">
    <value />
  </data>
  <data name="transfer money to anywhere" xml:space="preserve">
    <value />
  </data>
  <data name="YourQuickPayExperts" xml:space="preserve">
    <value>Your quick pay experts</value>
  </data>
  <data name="Don't have an account yet?" xml:space="preserve">
    <value />
  </data>
  <data name="Account has actived." xml:space="preserve">
    <value />
  </data>
  <data name="You can send active email after 15 minutes." xml:space="preserve">
    <value>Send mail too Frequently,Please resend after 15 minutes.</value>
  </data>
  <data name="order amount not match." xml:space="preserve">
    <value />
  </data>
  <data name="systemProcessError" xml:space="preserve">
    <value>sorry,please contact us for this error #webmaster@dotpay.co</value>
  </data>
  <data name="continueDeposit" xml:space="preserve">
    <value>Continue deposit</value>
  </data>
  <data name="depositResult" xml:space="preserve">
    <value>Deposit Result</value>
  </data>
  <data name="depositSuccessNotice" xml:space="preserve">
    <value>Congratulations , deposit {0} yuan success.</value>
  </data>
  <data name="easypayInvlidResult" xml:space="preserve">
    <value>invalid result.</value>
  </data>
  <data name="returnToI" xml:space="preserve">
    <value>Return my dotpay</value>
  </data>
  <data name="viewDepositRecord" xml:space="preserve">
    <value>View deposit records</value>
  </data>
  <data name="CurrencyTypeCny" xml:space="preserve">
    <value>CNY</value>
  </data>
  <data name="CurrencyTypeUsd" xml:space="preserve">
    <value>USD</value>
  </data>
  <data name="DepositStatusCompleted" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="DepositStatusFail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="DepositStatusStarted" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="DepositTransaction" xml:space="preserve">
    <value>Deposit</value>
  </data>
  <data name="PaywayAlipay" xml:space="preserve">
    <value />
  </data>
  <data name="PaywayBank" xml:space="preserve">
    <value />
  </data>
  <data name="PaywayDotpay" xml:space="preserve">
    <value />
  </data>
  <data name="PaywayEasyPay" xml:space="preserve">
    <value />
  </data>
  <data name="PaywayRipple" xml:space="preserve">
    <value />
  </data>
  <data name="PaywayTenpay" xml:space="preserve">
    <value />
  </data>
  <data name="TransferTransaction" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="TransferTransactionStatusCanceled" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="TransferTransactionStatusFailed" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="TransferTransactionStatusLockeByProcessor" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="TransferTransactionStatusSubmited" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="Invalid amount" xml:space="preserve">
    <value />
  </data>
</root>