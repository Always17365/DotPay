@using DotPay.Language
@using FC.Framework
<ul class="tabs">
    <li><a href="/profile">@Html.Lang("Profile")</a></li>
    <li class="active"><a href="/balances">@Html.Lang("Balances")</a></li>
    <li><a href="/orders">@Html.Lang("Orders")</a></li>
    <li><a href="/trades">@Html.Lang("Trade History")</a></li>
    <li><a href="/loginHistory">@Html.Lang("Login History")</a></li>
</ul>

<h2>@Html.Lang("Deposit") @ViewBag.CurrencyCode <span class="coinname">@ViewBag.Currency</span></h2>

<div class="success box" id="sucessBox" style="display:none;"><img src="/public/images/generating.gif" alt="Generating!" class="left 2x" width="32"><strong>Generating...</strong><br><span id="spanSuccessBox"></span></div>
<div class="fail box" id="failBox" style="display:none;"><img src="/public/images/error.png" alt="Error!" class="left 2x" width="32"><strong>@Html.Lang("msg_box_error")!</strong><br><span id="spanFailBox"></span></div>
@Html.Lang("Your current available {0} balance:", (string)ViewBag.Currency.ToString())  <strong>@ViewBag.Balance.ToString("0.########")</strong>
<h3>@Html.Lang("Your Deposit Address")</h3>
@if (string.IsNullOrEmpty(ViewBag.PaymentAddress))
{
    <div class="noAddressSection">
        @string.Format("You do not currently have a deposit address. Use the button below to generate a {0} address to deposit to.", ViewBag.Currency)
        <br><br>
        @Html.AntiForgeryToken()
        <input class="generateAddress" type="button" value="Generate Deposit Address">
    </div>
}
<div class="addressSection" @(!string.IsNullOrEmpty(ViewBag.PaymentAddress) ? "" : "style=display:none")>
    @if (ViewBag.CurrencyCode == "NXT")
    {
        <div class="options box" style="display: inline-block;">
            <span id="address">@ViewBag.PaymentAddress</span> &nbsp;<input type="button" class="inline copy-button" data-clipboard-target="address" value="Copy">
            <br><b>@Html.Lang("or")</b><br>
            <span id="numericaddress">@ViewBag.NxtNumericPaymentAddress</span> &nbsp; <input type="button" class="inline copy-button" data-clipboard-target="numericaddress" value="Copy">
        </div><br>
        <h4>@Html.Lang("NXT Account Public Key")</h4>
        @Html.Lang("You need the public key for the first deposit.")<br>
        <div class="options box" style="display: inline-block;"><span id="publickey">@ViewBag.NxtPublicKey</span> &nbsp; <input type="button" class="inline copy-button" data-clipboard-target="publickey" value="Copy"></div><br>
    }
    else
    {
        <div class="options box" style="display: inline-block;"><span id="address">@ViewBag.PaymentAddress</span> &nbsp; <input type="button" class="inline copy-button" data-clipboard-target="address" value="Copy"></div>
    }
    <br>
    @Html.Lang("Generate deposit address will not change.")
    <br><br>
    @if (ViewBag.CurrencyCode != "NXT")
    {
        @Html.LangAsHtmlString("Deposits are confirmed and will be available to use after <strong>{0}</strong> confirmations. Once our system has picked up the transaction it will show in the deposits listing as pending, this may take a few minutes from when the transaction has been broadcast to the network.", (string)ViewBag.CurrencySettings.NeedConfirm.ToString());
    }
</div>
<div class="box fail" style="margin: 25px 0 0;">
    <strong>@Html.Lang("Polite Notice:")</strong>@Html.Lang("Please do not mine directly to the deposit address and / or auto withdraw from pools.")
    <script src="/public/js/ZeroClipboard/ZeroClipboard.min.js"></script>
    <script type="text/javascript">
        ZeroClipboard.config({ swfPath: "/public/js/zeroclipboard/zeroclipboard.swf" });

        var client = new ZeroClipboard($(".copy-button"));

        client.on("ready", function (readyEvent) {
            client.on("aftercopy", function (event) {
                $(event.target).css("background", "#666");
                $(event.target).val("Copied");
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".generateAddress").on('click', function () {

                var token = $("input[name='__RequestVerificationToken']").val();

                $.ajax({
                    type: 'POST',
                    url: '/deposit/generateNewAddress',
                    data: 'currency=@ViewBag.CurrencySettings.ID&__RequestVerificationToken=' + token,
                    success: function (data) {
                        if (data.Code == 1) {
                            $('#sucessBox').show();
                            $('#spanSuccessBox').html(data.Message);
                            $('html, body').animate({
                                scrollTop: $("#sucessBox").offset().top - 95
                            }, 1000);
                            window.setTimeout(function () {
                                $.post("/deposit/getDepositAddress", { currency: '@ViewBag.CurrencySettings.ID' },
                                     function (data) {
                                         $('#sucessBox, .addressSection').show();
                                         $('#failBox, .noAddressSection').hide();
                                         $('#address').text(data.PaymentAddress);
                                         $('#sucessBox').hide();
                                     });
                            }, 2000)
                        } else {
                            $('#spanFailBox').html(data.Message);
                            $('#failBox').show();
                            $('#sucessBox').hide();
                            $('html, body').animate({
                                scrollTop: $("#failBox").offset().top - 95
                            }, 1000);
                        }
                    }
                });
            });
        });
    </script>
</div> 