@using DotPay.Language
<ul class="tabs">
    <li><a href="/profile">@Html.Lang("Profile")</a></li>
    <li class="active"><a href="/balances">@Html.Lang("Balances")</a></li>
    <li><a href="/orders">@Html.Lang("Orders")</a></li>
    <li><a href="/trades">@Html.Lang("Trade History")</a></li>
    <li><a href="/loginHistory">@Html.Lang("Login History")</a></li>
</ul>

<div class="success box" id="sucessBox" style="display:none;"><img src="/public/images/success.png" alt="Success!" class="left 2x" width="32"><strong>@Html.Lang("msg_box_success")!</strong><br><span id="spanSuccessBox"></span></div>
<div class="fail box" id="failBox" style="display:none;"><img src="/public/images/error.png" alt="Error!" class="left 2x" width="32"><strong>@Html.Lang("msg_box_error")!</strong><br><span id="spanFailBox"></span></div>
<div class="success box" id="depositSuccessBox" style="display:none;text-align:left">
    <img src="/public/images/success.png" alt="Success!" class="left 2x" width="32"><strong>@Html.Lang("msg_box_success")!</strong><br>
    <span style="display:inline-block" id="spanDepositCodeSuccessBox"></span><br>
    <strong style="margin-left:45px">@Html.Lang("Deposit Code:")</strong> <span style="display:inline-block;color:#090" id="spanDepositCode"></span>&nbsp; <input type="button" class="inline copy-button" style="float:none" data-clipboard-target="spanDepositCode" value="Copy">
</div>

<h2>@Html.Lang("Withdraw") @ViewBag.Currency</h2>
@Html.Lang("Your current available {0} balance:", (string)ViewBag.Currency.ToString()) <strong><a href="#" id="balance">@ViewBag.Balance.ToString("0.########") </a></strong><br>
<div class="options box" style="display: inline-block;">
    <span>@Html.LangAsHtmlString("Your remaining withdrawal limit is <strong>{0}</strong> today.", (string)ViewBag.TodayLimit.ToString("0.#########") + "/" + (string)ViewBag.CurrencySetting.WithdrawDayLimit.ToString("0.########"))</span>
</div>
<form id="requestWithdrawal" class="withdrawform">
    @Html.AntiForgeryToken()
    <input type="hidden" name="currency" value="@ViewBag.Currency">
    <span>
        <input type="checkbox" name="isWithdrawToCode" id="isWithdrawToCode"> @Html.Lang("Withdraw to DotPay Deposit Code") (@Html.Lang("No fee"))
    </span><br><br>
    <label class="title">@Html.Lang("Amount to Withdraw"):</label>
    <input type="text" name="withdrawamount" id="withdrawamount" value="0.00000000"> @ViewBag.Currency <br><br>
    <span id="oneTimeLimitDes" class="remark"> @Html.Lang("Withdrawal limit one time:") <strong>@ViewBag.CurrencySetting.WithdrawOnceLimit.ToString("0.########")</strong></span><br><br>
    <label class="title">@Html.Lang("Withdraw Fee"):</label>
    <span id="withdrawFeeRate"> @ViewBag.CurrencySetting.WithdrawFeeRate.ToString("P")</span> @Html.Raw("+") <span id="withdrawFixedFee">@ViewBag.CurrencySetting.WithdrawFixedFee</span> @ViewBag.Currency <br><br>
    <label class="title">@Html.Lang("Net Withdraw Amount"):</label><input type="hidden" name="amount"><span id="netTotal">0.00000000</span> @ViewBag.Currency <br><br>
    <div id="withdrawAddress">
        <label class="title">@ViewBag.Currency @Html.Lang("Withdrawal Address")</label><input type="text" name="address" id="address" value="" autocomplete="off">
    </div><br>
    <label class="title">@Html.Lang("Confirm Trade Password"):</label><input type="password" name="tradepassword" value=""><br>
    <a id="forgetTradePassword">@Html.Lang("forgot trade password? click here to reset your trade password")</a>
    <br>
    @if (ViewBag.CurrentUser.IsOpenTwoFactorGA)
    {
        <label class="title"> @Html.Lang("Google OTP") : </label><input type="text" name="ga_Otp" id="ga_Otp_modifyPassword" value="" autocomplete="off"><br>
        <span class="remark" style="margin-left:180px">@Html.Lang("Please enter code from your Google Authenticator App.")</span><br>
    }
    @if (ViewBag.CurrentUser.IsOpenTwoFactorSMS)
    {
        <label class="title">@Html.Lang("SMS OTP") :</label><input type="text" name="sms_Otp" id="sms_Otp_modifyPassword" value="" autocomplete="off"><br>
        <span class="remark" style="margin-left:180px">@Html.Lang("Please enter code from your Sms.")</span><br>
        <a id="btnSendSMSForWithdraw">@Html.Lang("Click here to get SMS Authentication Code")</a><br>
    }
    <br><br>
    <input type="submit" value="@Html.Lang("Process Withdrawal")">
</form>

<link rel="stylesheet" href="/public/css/messi.css">
<script src="/public/js/messi.min.js"></script>
<script src="/public/js/jquery.validate.min.js"></script>
<script src="/public/js/ZeroClipboard/ZeroClipboard.min.js"></script>
<script type="text/javascript">
    ZeroClipboard.config({ swfPath: "/public/js/zeroclipboard/zeroclipboard.swf" });

    var client = new ZeroClipboard($(".copy-button"));

    client.on("ready", function (readyEvent) {
        client.on("aftercopy", function (event) {
            $(event.target).css("background", "#666");
            $(event.target).val("Copied");
        });
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#isWithdrawToCode").click(function(){
            if($(this).attr("checked")){
                $("#withdrawAddress").hide();
                $("#withdrawFeeRate").html("0.00 %");
                $("#withdrawFixedFee").html("0");
            }
            else {
                $("#withdrawAddress").show();
                $("#withdrawFeeRate").html("@ViewBag.CurrencySetting.WithdrawFeeRate.ToString("P")");
                $("#withdrawFixedFee").html("@ViewBag.CurrencySetting.WithdrawFixedFee");
            }
            calcWithdrawAmoun();
        });
        $('#withdrawamount').change(function () {
            calcWithdrawAmoun()
        });

        $("#forgetTradePassword").click(function(){
            $.ajax({
                type: 'POST',
                url: '/forgetTradePassword',
                data: $("#requestWithdrawal").serialize() ,
                success: function (data) {
                    if(data.Code==1)
                        commonFormSuccessCallback(data);
                    else if(data.Code==2)
                        window.location.href="/resetTradePasswordBy2FA/"+data.Hash;
                    else
                        commonFormFailCallback(data);
                }
            });
        });

        function calcWithdrawAmoun(){
            var feeRate = parseFloat("@ViewBag.CurrencySetting.WithdrawFeeRate");
            var fixedFee = parseFloat("@ViewBag.CurrencySetting.WithdrawFixedFee");
            var onceLimit = parseFloat("@ViewBag.CurrencySetting.WithdrawOnceLimit");
            var balance= parseFloat("@ViewBag.Balance");
            var amount = parseFloat($('#withdrawamount').val())
            if (amount > onceLimit) {
                amount = onceLimit;
                $("#oneTimeLimitDes").addClass("priceDown");
                setTimeout(function () { $("#oneTimeLimitDes").toggleClass("priceDown"); }, 3000);
                $('#withdrawamount').val(amount);
            }
            var fee=0;
            if($("#isWithdrawToCode:checked").size()>0) fee=0;
            else fee=fixedFee + amount.mul(feeRate);
            $('#netTotal').text((amount - fee).toFixed(8));
            $('input[name="amount"]').val((amount - fee).toFixed(8))
        }

        $("#balance").on('click', function (event) {
            event.preventDefault();
            var feeRate = parseFloat("@ViewBag.CurrencySetting.WithdrawFeeRate");
            var fixedFee = parseFloat("@ViewBag.CurrencySetting.WithdrawFixedFee");
            var onceLimit = parseFloat("@ViewBag.CurrencySetting.WithdrawOnceLimit");
            var amount = parseFloat($(this).text())
            if (amount > onceLimit) amount = onceLimit;

            var fee=0;
            if($("#isWithdrawToCode:checked").size()>0) fee=0;
            else fee=fixedFee + amount.mul(feeRate);
            $('#withdrawamount').val(amount);
            $('#netTotal').text((amount - fee).toFixed(8));
            $('input[name="amount"]').val((amount - fee).toFixed(8))
        });
        $("#btnSendSMSForWithdraw").click(function () {
            var btn = $(this);
            sendsms(btn, smsUseFor.Withdraw);
        });
        $("#requestWithdrawal").submit(function (event) {
            event.preventDefault();
            if ($(this).valid()) {
                new Messi(LABEL_Confirm_V_Withdraw, {
                    title: LABEL_Confirm, titleClass: 'info', buttons: [{ id: 0, label: 'Yes', val: 'Y', btnClass: 'btn-success' }, { id: 1, label: 'No', val: 'N', btnClass: 'btn-danger' }], modal: true,
                    callback: function (val) {
                        if (val == 'Y') {
                            $.ajax({
                                type: 'POST',
                                url: '/withdraw/v/@ViewBag.Currency.ToString("D")',
                                data: $("#requestWithdrawal").serialize() + "&withdrawToCode=" + ($("#isWithdrawToCode:checked").size()==0?false:true),
                                success: function (data) {
                                    if (data.Code == 1) {
                                        $('#spanSuccessBox').html(data.Message);
                                        $('#sucessBox').show();
                                        $('#failBox').hide();
                                        $('#depositSuccessBox').hide();
                                        $('html, body').animate({
                                            scrollTop: $("#sucessBox").offset().top - 95
                                        }, 1000);
                                        $('#balance').text(data.new_balance);
                                        $('#withdrawamount').val('0.00000000');
                                        $('input[name="password"]').val('');
                                        $('#netTotal').text('0.00000000');
                                    }
                                    else if(data.Code==2){
                                        $('#spanDepositCodeSuccessBox').html(data.Message);
                                        $("#spanDepositCode").html(data.DepositCode);
                                        $('#depositSuccessBox').show();
                                        $('#failBox').hide();
                                        $('#sucessBox').hide();
                                        $('html, body').animate({
                                            scrollTop: $("#depositSuccessBox").offset().top - 95
                                        }, 1000);
                                        $('#balance').text(data.new_balance);
                                        $('#withdrawamount').val('0.00000000');
                                        $('input[name="password"]').val('');
                                        $('#netTotal').text('0.00000000');
                                    }
                                    else {
                                        $('#spanFailBox').html(data.Message);
                                        $('#failBox').show();
                                        $('#depositSuccessBox').hide();
                                        $('#sucessBox').hide();
                                        $('html, body').animate({
                                            scrollTop: $("#failBox").offset().top - 95
                                        }, 1000);
                                    }
                                }
                            });
                        }
                    }
                });
            }
        });
        $("#requestWithdrawal").validate({
            rules: {
                withdrawamount: {
                    required: true,
                    min: @ViewBag.CurrencySetting.WithdrawOnceMin,
                    max: @ViewBag.Balance
                    },
                address: "required",
                tradepassword: {
                    required: true
                },
                ga_Otp: "required",
                sms_Otp: "required"
            },
            messages: {
                withdrawamount: {
                    min: "Withdraw amount must be equal to or greater than @ViewBag.CurrencySetting.WithdrawOnceMin @ViewBag.Currency.",
                    max: "Withdraw amount must be equal to or less than your available balance."
                },
                address: "Please enter your address.",
                tradepassword: {
                    required: "Please enter your trade password.",
                },
                ga_Otp: "Please enter your Google Authentication OTP.",
                sms_Otp: "Please enter your SMS Authentication OTP."
            }
        });
    });
</script>