//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Dotpay.Actors.Implementations
{
    using Orleans.CodeGeneration;
    using Orleans;
    using System;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
}
namespace Dotpay.Actor.Service.Implementations
{
    using Orleans.CodeGeneration;
    using Orleans;
    using System;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
}
namespace Dotpay.Actor.Implementations
{
    using System;
    using System.Collections.Generic;
    using System.Collections;
    using Dotpay.Actor.Interfaces;
    using System.Runtime.Serialization;
    using Orleans.CodeGeneration;
    using Orleans;
    using Orleans.EventSourcing;
    using System.Runtime.InteropServices;
    using Dotpay.Common;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Dotpay.Actor.Implementations.Dotpay.Actor.Implementations.RippleToFinancialInstit" +
        "ution")]
    public class RippleToFinancialInstitutionState : global::Orleans.CodeGeneration.GrainState, IRippleToFinancialInstitutionState
    {
        

            public UInt64 @Version { get; set; }

            public String @InvoiceId { get; set; }

            public String @TxId { get; set; }

            public TransferTargetInfo @TransferTargetInfo { get; set; }

            public Decimal @Amount { get; set; }

            public Decimal @SendAmount { get; set; }

            public String @Memo { get; set; }

            public DateTime @CreatedAt { get; set; }

            public Nullable<DateTime> @ReceivedAt { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Version", out value)) @Version = (UInt64) value;
                if (values.TryGetValue("InvoiceId", out value)) @InvoiceId = (String) value;
                if (values.TryGetValue("TxId", out value)) @TxId = (String) value;
                if (values.TryGetValue("TransferTargetInfo", out value)) @TransferTargetInfo = (TransferTargetInfo) value;
                if (values.TryGetValue("Amount", out value)) @Amount = (Decimal) value;
                if (values.TryGetValue("SendAmount", out value)) @SendAmount = (Decimal) value;
                if (values.TryGetValue("Memo", out value)) @Memo = (String) value;
                if (values.TryGetValue("CreatedAt", out value)) @CreatedAt = (DateTime) value;
                if (values.TryGetValue("ReceivedAt", out value)) @ReceivedAt = (Nullable<DateTime>) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("RippleToFinancialInstitutionState( Version={0} InvoiceId={1} TxId={2} TransferTargetInfo={3} Amount={4} SendAmount={5} Memo={6} CreatedAt={7} ReceivedAt={8} )", @Version, @InvoiceId, @TxId, @TransferTargetInfo, @Amount, @SendAmount, @Memo, @CreatedAt, @ReceivedAt);
            }
        
        public RippleToFinancialInstitutionState() : 
                base("Dotpay.Actor.Implementations.RippleToFinancialInstitution")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Version"] = this.Version;
            result["InvoiceId"] = this.InvoiceId;
            result["TxId"] = this.TxId;
            result["TransferTargetInfo"] = this.TransferTargetInfo;
            result["Amount"] = this.Amount;
            result["SendAmount"] = this.SendAmount;
            result["Memo"] = this.Memo;
            result["CreatedAt"] = this.CreatedAt;
            result["ReceivedAt"] = this.ReceivedAt;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Version = default(UInt64);
            this.InvoiceId = default(String);
            this.TxId = default(String);
            this.TransferTargetInfo = new TransferTargetInfo();
            this.Amount = default(Decimal);
            this.SendAmount = default(Decimal);
            this.Memo = default(String);
            this.CreatedAt = default(DateTime);
            this.ReceivedAt = default(Nullable<DateTime>);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            RippleToFinancialInstitutionState input = ((RippleToFinancialInstitutionState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            RippleToFinancialInstitutionState input = ((RippleToFinancialInstitutionState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            RippleToFinancialInstitutionState result = new RippleToFinancialInstitutionState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Dotpay.Actor.Implementations.Dotpay.Actor.Implementations.SystemSetting")]
    public class SystemSettingState : global::Orleans.CodeGeneration.GrainState, ISystemSettingState
    {
        

            public UInt64 @Version { get; set; }

            public RippleToFinancialInstitutionSetting @RippleToFinancialInstitutionSetting { get; set; }

            public DateTime @RippleToFinancialInstitutionSettingUpdateAt { get; set; }

            public Guid @RippleToFinancialInstitutionSettingUpdateBy { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Version", out value)) @Version = (UInt64) value;
                if (values.TryGetValue("RippleToFinancialInstitutionSetting", out value)) @RippleToFinancialInstitutionSetting = (RippleToFinancialInstitutionSetting) value;
                if (values.TryGetValue("RippleToFinancialInstitutionSettingUpdateAt", out value)) @RippleToFinancialInstitutionSettingUpdateAt = (DateTime) value;
                if (values.TryGetValue("RippleToFinancialInstitutionSettingUpdateBy", out value)) @RippleToFinancialInstitutionSettingUpdateBy = (Guid) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("SystemSettingState( Version={0} RippleToFinancialInstitutionSetting={1} RippleToFinancialInstitutionSettingUpdateAt={2} RippleToFinancialInstitutionSettingUpdateBy={3} )", @Version, @RippleToFinancialInstitutionSetting, @RippleToFinancialInstitutionSettingUpdateAt, @RippleToFinancialInstitutionSettingUpdateBy);
            }
        
        public SystemSettingState() : 
                base("Dotpay.Actor.Implementations.SystemSetting")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Version"] = this.Version;
            result["RippleToFinancialInstitutionSetting"] = this.RippleToFinancialInstitutionSetting;
            result["RippleToFinancialInstitutionSettingUpdateAt"] = this.RippleToFinancialInstitutionSettingUpdateAt;
            result["RippleToFinancialInstitutionSettingUpdateBy"] = this.RippleToFinancialInstitutionSettingUpdateBy;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Version = default(UInt64);
            this.RippleToFinancialInstitutionSetting = new RippleToFinancialInstitutionSetting();
            this.RippleToFinancialInstitutionSettingUpdateAt = default(DateTime);
            this.RippleToFinancialInstitutionSettingUpdateBy = default(Guid);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            SystemSettingState input = ((SystemSettingState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            SystemSettingState input = ((SystemSettingState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            SystemSettingState result = new SystemSettingState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Dotpay.Actor.Implementations.Dotpay.Actor.Implementations.AtomicIncrement")]
    public class AtomicIncrementState : global::Orleans.CodeGeneration.GrainState, IAtomicIncrementState
    {
        

            public Int32 @Seed { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Seed", out value)) @Seed = value is Int64 ? (Int32)(Int64)value : (Int32)value;
            }

            public override System.String ToString()
            {
                return System.String.Format("AtomicIncrementState( Seed={0} )", @Seed);
            }
        
        public AtomicIncrementState() : 
                base("Dotpay.Actor.Implementations.AtomicIncrement")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Seed"] = this.Seed;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Seed = default(Int32);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            AtomicIncrementState input = ((AtomicIncrementState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AtomicIncrementState input = ((AtomicIncrementState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AtomicIncrementState result = new AtomicIncrementState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Dotpay.Actor.Implementations.Dotpay.Actor.Implementations.User")]
    public class UserState : global::Orleans.CodeGeneration.GrainState, IUserState
    {
        

            public UInt64 @Version { get; set; }

            public String @LoginName { get; set; }

            public String @Email { get; set; }

            public String @EmailVerifyToken { get; set; }

            public Boolean @IsVerified { get; set; }

            public Boolean @IsLocked { get; set; }

            public Nullable<DateTime> @LockedAt { get; set; }

            public IEnumerable<ManagerType> @Roles { get; set; }

            public IdentityInfo @IdentityInfo { get; set; }

            public MobileSetting @MobileSetting { get; set; }

            public String @LoginPassword { get; set; }

            public Nullable<DateTime> @LastLoginPasswordChangeAt { get; set; }

            public String @PaymentPassword { get; set; }

            public Nullable<DateTime> @LastPaymentPasswordChangeAt { get; set; }

            public String @LastLoginIp { get; set; }

            public Nullable<DateTime> @LastLoginAt { get; set; }

            public Nullable<DateTime> @LastLoginFailedAt { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Version", out value)) @Version = (UInt64) value;
                if (values.TryGetValue("LoginName", out value)) @LoginName = (String) value;
                if (values.TryGetValue("Email", out value)) @Email = (String) value;
                if (values.TryGetValue("EmailVerifyToken", out value)) @EmailVerifyToken = (String) value;
                if (values.TryGetValue("IsVerified", out value)) @IsVerified = (Boolean) value;
                if (values.TryGetValue("IsLocked", out value)) @IsLocked = (Boolean) value;
                if (values.TryGetValue("LockedAt", out value)) @LockedAt = (Nullable<DateTime>) value;
                if (values.TryGetValue("Roles", out value)) @Roles = (IEnumerable<ManagerType>) value;
                if (values.TryGetValue("IdentityInfo", out value)) @IdentityInfo = (IdentityInfo) value;
                if (values.TryGetValue("MobileSetting", out value)) @MobileSetting = (MobileSetting) value;
                if (values.TryGetValue("LoginPassword", out value)) @LoginPassword = (String) value;
                if (values.TryGetValue("LastLoginPasswordChangeAt", out value)) @LastLoginPasswordChangeAt = (Nullable<DateTime>) value;
                if (values.TryGetValue("PaymentPassword", out value)) @PaymentPassword = (String) value;
                if (values.TryGetValue("LastPaymentPasswordChangeAt", out value)) @LastPaymentPasswordChangeAt = (Nullable<DateTime>) value;
                if (values.TryGetValue("LastLoginIp", out value)) @LastLoginIp = (String) value;
                if (values.TryGetValue("LastLoginAt", out value)) @LastLoginAt = (Nullable<DateTime>) value;
                if (values.TryGetValue("LastLoginFailedAt", out value)) @LastLoginFailedAt = (Nullable<DateTime>) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("UserState( Version={0} LoginName={1} Email={2} EmailVerifyToken={3} IsVerified={4} IsLocked={5} LockedAt={6} Roles={7} IdentityInfo={8} MobileSetting={9} LoginPassword={10} LastLoginPasswordChangeAt={11} PaymentPassword={12} LastPaymentPasswordChangeAt={13} LastLoginIp={14} LastLoginAt={15} LastLoginFailedAt={16} )", @Version, @LoginName, @Email, @EmailVerifyToken, @IsVerified, @IsLocked, @LockedAt, @Roles, @IdentityInfo, @MobileSetting, @LoginPassword, @LastLoginPasswordChangeAt, @PaymentPassword, @LastPaymentPasswordChangeAt, @LastLoginIp, @LastLoginAt, @LastLoginFailedAt);
            }
        
        public UserState() : 
                base("Dotpay.Actor.Implementations.User")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Version"] = this.Version;
            result["LoginName"] = this.LoginName;
            result["Email"] = this.Email;
            result["EmailVerifyToken"] = this.EmailVerifyToken;
            result["IsVerified"] = this.IsVerified;
            result["IsLocked"] = this.IsLocked;
            result["LockedAt"] = this.LockedAt;
            result["Roles"] = this.Roles;
            result["IdentityInfo"] = this.IdentityInfo;
            result["MobileSetting"] = this.MobileSetting;
            result["LoginPassword"] = this.LoginPassword;
            result["LastLoginPasswordChangeAt"] = this.LastLoginPasswordChangeAt;
            result["PaymentPassword"] = this.PaymentPassword;
            result["LastPaymentPasswordChangeAt"] = this.LastPaymentPasswordChangeAt;
            result["LastLoginIp"] = this.LastLoginIp;
            result["LastLoginAt"] = this.LastLoginAt;
            result["LastLoginFailedAt"] = this.LastLoginFailedAt;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Version = default(UInt64);
            this.LoginName = default(String);
            this.Email = default(String);
            this.EmailVerifyToken = default(String);
            this.IsVerified = default(Boolean);
            this.IsLocked = default(Boolean);
            this.LockedAt = default(Nullable<DateTime>);
            this.Roles = default(IEnumerable<ManagerType>);
            this.IdentityInfo = default(IdentityInfo);
            this.MobileSetting = new MobileSetting();
            this.LoginPassword = default(String);
            this.LastLoginPasswordChangeAt = default(Nullable<DateTime>);
            this.PaymentPassword = default(String);
            this.LastPaymentPasswordChangeAt = default(Nullable<DateTime>);
            this.LastLoginIp = default(String);
            this.LastLoginAt = default(Nullable<DateTime>);
            this.LastLoginFailedAt = default(Nullable<DateTime>);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            UserState input = ((UserState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UserState input = ((UserState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UserState result = new UserState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
