//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Dotpay.Actor.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Dotpay.Actor.Interfaces;
    using Dotpay.Common.Enum;
    using Orleans;
    using Orleans.Runtime;
    using Dotpay.Common;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class AccountFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IAccount GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IAccount), -1388844553, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IAccount GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IAccount), -1388844553, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IAccount Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return AccountReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IAccount")]
        internal class AccountReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IAccount
        {
            

            public static Dotpay.Actor.Interfaces.IAccount Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IAccount) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IAccount), (global::Orleans.Runtime.GrainReference gr) => { return new AccountReference(gr);}, grainRef, -1388844553);
            }
            
            protected internal AccountReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal AccountReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1388844553;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IAccount";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                AccountReference input = ((AccountReference)(original));
                return ((AccountReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                AccountReference input = ((AccountReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return AccountReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return AccountMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IAccount.Initialize(int @ownerId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1978861349, new object[] {@ownerId} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IAccount.Validate()
            {

                return base.InvokeMethodAsync<System.Boolean>(1980500241, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IAccount.AddTransactionPreparation(System.Guid @transactionId, Dotpay.Common.Enum.TransactionType @transactionType, Dotpay.Common.Enum.PreparationType @preparationType, Dotpay.Common.Enum.CurrencyType @currency, decimal @amount)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1176924676, new object[] {@transactionId, @transactionType, @preparationType, @currency, @amount} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IAccount.CommitTransactionPreparation(System.Guid @transactionId)
            {

                return base.InvokeMethodAsync<object>(-576022763, new object[] {@transactionId} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IAccount.CancelTransactionPreparation(System.Guid @transactionId)
            {

                return base.InvokeMethodAsync<object>(-1730429136, new object[] {@transactionId} );
            }
            
            System.Threading.Tasks.Task<decimal> Dotpay.Actor.Interfaces.IAccount.GetBalance(Dotpay.Common.Enum.CurrencyType @currency)
            {

                return base.InvokeMethodAsync<System.Decimal>(-1942096402, new object[] {@currency} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Dotpay.Common.Enum.CurrencyType, decimal>> Dotpay.Actor.Interfaces.IAccount.GetBalances()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<Dotpay.Common.Enum.CurrencyType,System.Decimal>>(-943710304, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> Dotpay.Actor.Interfaces.IAccount.GetOwnerId()
            {

                return base.InvokeMethodAsync<System.Int32>(1326764137, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IAccount", -1388844553)]
    internal class AccountMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1388844553;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1388844553:  // IAccount
                        switch (methodId)
                        {
                            case -1978861349: 
                                return ((IAccount)grain).Initialize((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1980500241: 
                                return ((IAccount)grain).Validate().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1176924676: 
                                return ((IAccount)grain).AddTransactionPreparation((Guid)arguments[0], (Dotpay.Common.Enum.TransactionType)arguments[1], (Dotpay.Common.Enum.PreparationType)arguments[2], (Dotpay.Common.Enum.CurrencyType)arguments[3], (Decimal)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -576022763: 
                                return ((IAccount)grain).CommitTransactionPreparation((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1730429136: 
                                return ((IAccount)grain).CancelTransactionPreparation((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1942096402: 
                                return ((IAccount)grain).GetBalance((Dotpay.Common.Enum.CurrencyType)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -943710304: 
                                return ((IAccount)grain).GetBalances().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1326764137: 
                                return ((IAccount)grain).GetOwnerId().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1388844553:  // IAccount
                    switch (methodId)
                    {
                        case -1978861349:
                            return "Initialize";
                    case 1980500241:
                            return "Validate";
                    case 1176924676:
                            return "AddTransactionPreparation";
                    case -576022763:
                            return "CommitTransactionPreparation";
                    case -1730429136:
                            return "CancelTransactionPreparation";
                    case -1942096402:
                            return "GetBalance";
                    case -943710304:
                            return "GetBalances";
                    case 1326764137:
                            return "GetOwnerId";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ManagerFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IManager GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IManager), 1386721461, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IManager GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IManager), 1386721461, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IManager")]
        internal class ManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IManager
        {
            

            public static Dotpay.Actor.Interfaces.IManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IManager), (global::Orleans.Runtime.GrainReference gr) => { return new ManagerReference(gr);}, grainRef, 1386721461);
            }
            
            protected internal ManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1386721461;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ManagerReference input = ((ManagerReference)(original));
                return ((ManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ManagerReference input = ((ManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IManager.Initialize(string @loginName, string @loginPassword, string @twofactorKey, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<object>(1448728935, new object[] {@loginName, @loginPassword, @twofactorKey, @operatorId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IManager.Login(string @loginPassword, string @ip)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1415878300, new object[] {@loginPassword, @ip} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IManager.Lock(System.Guid @operatorId, string @reason)
            {

                return base.InvokeMethodAsync<object>(1046983731, new object[] {@operatorId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IManager.Unlock(System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<object>(553967826, new object[] {@operatorId} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IManager.CheckLoginPassword(string @loginPassword)
            {

                return base.InvokeMethodAsync<System.Boolean>(-1388525298, new object[] {@loginPassword} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IManager.CheckTwofactor(string @tfPassword)
            {

                return base.InvokeMethodAsync<System.Boolean>(499438529, new object[] {@tfPassword} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IManager.ChangeLoginPassword(string @oldLoginPassword, string @newLoginPassword)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1632402458, new object[] {@oldLoginPassword, @newLoginPassword} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IManager.ResetLoginPassword(string @newLoginPassword, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<object>(1107630634, new object[] {@newLoginPassword, @operatorId} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IManager.AssignRoles(System.Guid @operatorId, IEnumerable<ManagerType> @roles)
            {

                return base.InvokeMethodAsync<object>(953637368, new object[] {@operatorId, @roles} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IManager.HasRole(Dotpay.Common.ManagerType @role)
            {

                return base.InvokeMethodAsync<System.Boolean>(-376292112, new object[] {@role} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IManager", 1386721461)]
    internal class ManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1386721461;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1386721461:  // IManager
                        switch (methodId)
                        {
                            case 1448728935: 
                                return ((IManager)grain).Initialize((String)arguments[0], (String)arguments[1], (String)arguments[2], (Guid)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1415878300: 
                                return ((IManager)grain).Login((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1046983731: 
                                return ((IManager)grain).Lock((Guid)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 553967826: 
                                return ((IManager)grain).Unlock((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1388525298: 
                                return ((IManager)grain).CheckLoginPassword((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 499438529: 
                                return ((IManager)grain).CheckTwofactor((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1632402458: 
                                return ((IManager)grain).ChangeLoginPassword((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1107630634: 
                                return ((IManager)grain).ResetLoginPassword((String)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 953637368: 
                                return ((IManager)grain).AssignRoles((Guid)arguments[0], (IEnumerable<ManagerType>)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -376292112: 
                                return ((IManager)grain).HasRole((ManagerType)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1386721461:  // IManager
                    switch (methodId)
                    {
                        case 1448728935:
                            return "Initialize";
                    case 1415878300:
                            return "Login";
                    case 1046983731:
                            return "Lock";
                    case 553967826:
                            return "Unlock";
                    case -1388525298:
                            return "CheckLoginPassword";
                    case 499438529:
                            return "CheckTwofactor";
                    case -1632402458:
                            return "ChangeLoginPassword";
                    case 1107630634:
                            return "ResetLoginPassword";
                    case 953637368:
                            return "AssignRoles";
                    case -376292112:
                            return "HasRole";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MessageQueueProducterFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IMessageQueueProducter GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IMessageQueueProducter), -1662349184, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IMessageQueueProducter GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IMessageQueueProducter), -1662349184, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IMessageQueueProducter Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MessageQueueProducterReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IMessageQueueProducter")]
        internal class MessageQueueProducterReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IMessageQueueProducter
        {
            

            public static Dotpay.Actor.Interfaces.IMessageQueueProducter Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IMessageQueueProducter) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IMessageQueueProducter), (global::Orleans.Runtime.GrainReference gr) => { return new MessageQueueProducterReference(gr);}, grainRef, -1662349184);
            }
            
            protected internal MessageQueueProducterReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MessageQueueProducterReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1662349184;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IMessageQueueProducter";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MessageQueueProducterReference input = ((MessageQueueProducterReference)(original));
                return ((MessageQueueProducterReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MessageQueueProducterReference input = ((MessageQueueProducterReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MessageQueueProducterReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MessageQueueProducterMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IMessageQueueProducter.RegisterAndBindQueue(string @exchange, string @exchangeType, string @queue, string @routeKey, bool @durable)
            {

                return base.InvokeMethodAsync<object>(1272580437, new object[] {@exchange, @exchangeType, @queue, @routeKey, @durable} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IMessageQueueProducter.PublishMessage(Dotpay.Actor.Interfaces.MqMessage @message, string @exchangeName, string @routeKey, bool @durable)
            {

                return base.InvokeMethodAsync<object>(2141577879, new object[] {@message, @exchangeName, @routeKey, @durable} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IMessageQueueProducter", -1662349184)]
    internal class MessageQueueProducterMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1662349184;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1662349184:  // IMessageQueueProducter
                        switch (methodId)
                        {
                            case 1272580437: 
                                return ((IMessageQueueProducter)grain).RegisterAndBindQueue((String)arguments[0], (String)arguments[1], (String)arguments[2], (String)arguments[3], (Boolean)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2141577879: 
                                return ((IMessageQueueProducter)grain).PublishMessage((MqMessage)arguments[0], (String)arguments[1], (String)arguments[2], (Boolean)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1662349184:  // IMessageQueueProducter
                    switch (methodId)
                    {
                        case 1272580437:
                            return "RegisterAndBindQueue";
                    case 2141577879:
                            return "PublishMessage";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DepositTransactionFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IDepositTransaction GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IDepositTransaction), 93390578, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IDepositTransaction GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IDepositTransaction), 93390578, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IDepositTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DepositTransactionReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IDepositTransaction")]
        internal class DepositTransactionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IDepositTransaction
        {
            

            public static Dotpay.Actor.Interfaces.IDepositTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IDepositTransaction) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IDepositTransaction), (global::Orleans.Runtime.GrainReference gr) => { return new DepositTransactionReference(gr);}, grainRef, 93390578);
            }
            
            protected internal DepositTransactionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DepositTransactionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 93390578;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IDepositTransaction";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DepositTransactionReference input = ((DepositTransactionReference)(original));
                return ((DepositTransactionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DepositTransactionReference input = ((DepositTransactionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DepositTransactionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DepositTransactionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IDepositTransaction.Initiliaze(string @sequenceNo, System.Guid @accountId, Dotpay.Common.Enum.CurrencyType @currency, decimal @amount, Dotpay.Common.Enum.Payway @payway, string @memo)
            {

                return base.InvokeMethodAsync<object>(-182959339, new object[] {@sequenceNo, @accountId, @currency, @amount, @payway, @memo} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IDepositTransaction.ConfirmDepositPreparation()
            {

                return base.InvokeMethodAsync<object>(1732007996, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IDepositTransaction.ConfirmDeposit(Nullable<Guid> @managerId, string @transsactionNo)
            {

                return base.InvokeMethodAsync<object>(50814780, new object[] {@managerId, @transsactionNo} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IDepositTransaction.Fail(System.Guid @managerId, string @reason)
            {

                return base.InvokeMethodAsync<object>(366670044, new object[] {@managerId, @reason} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.DepositTransactionInfo> Dotpay.Actor.Interfaces.IDepositTransaction.GetTransactionInfo()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.DepositTransactionInfo>(1475556748, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.Enum.DepositStatus> Dotpay.Actor.Interfaces.IDepositTransaction.GetStatus()
            {

                return base.InvokeMethodAsync<Dotpay.Common.Enum.DepositStatus>(-1251605435, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IDepositTransaction", 93390578)]
    internal class DepositTransactionMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 93390578;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 93390578:  // IDepositTransaction
                        switch (methodId)
                        {
                            case -182959339: 
                                return ((IDepositTransaction)grain).Initiliaze((String)arguments[0], (Guid)arguments[1], (CurrencyType)arguments[2], (Decimal)arguments[3], (Payway)arguments[4], (String)arguments[5]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1732007996: 
                                return ((IDepositTransaction)grain).ConfirmDepositPreparation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 50814780: 
                                return ((IDepositTransaction)grain).ConfirmDeposit((Nullable<Guid>)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 366670044: 
                                return ((IDepositTransaction)grain).Fail((Guid)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1475556748: 
                                return ((IDepositTransaction)grain).GetTransactionInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1251605435: 
                                return ((IDepositTransaction)grain).GetStatus().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 93390578:  // IDepositTransaction
                    switch (methodId)
                    {
                        case -182959339:
                            return "Initiliaze";
                    case 1732007996:
                            return "ConfirmDepositPreparation";
                    case 50814780:
                            return "ConfirmDeposit";
                    case 366670044:
                            return "Fail";
                    case 1475556748:
                            return "GetTransactionInfo";
                    case -1251605435:
                            return "GetStatus";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RefundTransactionFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IRefundTransaction GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IRefundTransaction), -1339873468, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IRefundTransaction GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IRefundTransaction), -1339873468, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IRefundTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RefundTransactionReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IRefundTransaction")]
        internal class RefundTransactionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IRefundTransaction
        {
            

            public static Dotpay.Actor.Interfaces.IRefundTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IRefundTransaction) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IRefundTransaction), (global::Orleans.Runtime.GrainReference gr) => { return new RefundTransactionReference(gr);}, grainRef, -1339873468);
            }
            
            protected internal RefundTransactionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RefundTransactionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1339873468;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IRefundTransaction";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RefundTransactionReference input = ((RefundTransactionReference)(original));
                return ((RefundTransactionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RefundTransactionReference input = ((RefundTransactionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RefundTransactionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RefundTransactionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IRefundTransaction.Initiliaze(System.Guid @sourceTransactionId, System.Guid @accountId, Dotpay.Common.Enum.RefundTransactionType @refundTransactionType, Dotpay.Common.Enum.CurrencyType @currency, decimal @amount)
            {

                return base.InvokeMethodAsync<object>(2055806666, new object[] {@sourceTransactionId, @accountId, @refundTransactionType, @currency, @amount} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IRefundTransaction.ConfirmRefundPreparation()
            {

                return base.InvokeMethodAsync<object>(461297125, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IRefundTransaction.Confirm()
            {

                return base.InvokeMethodAsync<object>(-1612767347, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.Enum.RefundTransactionStatus> Dotpay.Actor.Interfaces.IRefundTransaction.GetStatus()
            {

                return base.InvokeMethodAsync<Dotpay.Common.Enum.RefundTransactionStatus>(-1251605435, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IRefundTransaction", -1339873468)]
    internal class RefundTransactionMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1339873468;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1339873468:  // IRefundTransaction
                        switch (methodId)
                        {
                            case 2055806666: 
                                return ((IRefundTransaction)grain).Initiliaze((Guid)arguments[0], (Guid)arguments[1], (RefundTransactionType)arguments[2], (CurrencyType)arguments[3], (Decimal)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 461297125: 
                                return ((IRefundTransaction)grain).ConfirmRefundPreparation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1612767347: 
                                return ((IRefundTransaction)grain).Confirm().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1251605435: 
                                return ((IRefundTransaction)grain).GetStatus().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1339873468:  // IRefundTransaction
                    switch (methodId)
                    {
                        case 2055806666:
                            return "Initiliaze";
                    case 461297125:
                            return "ConfirmRefundPreparation";
                    case -1612767347:
                            return "Confirm";
                    case -1251605435:
                            return "GetStatus";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SystemSettingFactory
    {
        

                        public static Dotpay.Actor.Interfaces.ISystemSetting GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.ISystemSetting), 468577895, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.ISystemSetting GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.ISystemSetting), 468577895, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.ISystemSetting Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SystemSettingReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ISystemSetting")]
        internal class SystemSettingReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.ISystemSetting
        {
            

            public static Dotpay.Actor.Interfaces.ISystemSetting Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.ISystemSetting) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.ISystemSetting), (global::Orleans.Runtime.GrainReference gr) => { return new SystemSettingReference(gr);}, grainRef, 468577895);
            }
            
            protected internal SystemSettingReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SystemSettingReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 468577895;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ISystemSetting";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SystemSettingReference input = ((SystemSettingReference)(original));
                return ((SystemSettingReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SystemSettingReference input = ((SystemSettingReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SystemSettingReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SystemSettingMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting> Dotpay.Actor.Interfaces.ISystemSetting.GetRippleToFinancialInstitutionSetting()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting>(1231346134, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ISystemSetting.UpdateRippleToFinancialInstitutionSetting(Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting @setting, System.Guid @updateBy)
            {

                return base.InvokeMethodAsync<object>(-8345625, new object[] {@setting, @updateBy} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.RippleToDotpaySetting> Dotpay.Actor.Interfaces.ISystemSetting.GetRippleToDotpaySetting()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.RippleToDotpaySetting>(643282754, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ISystemSetting.UpdateRippleToDotpaySetting(Dotpay.Actor.Interfaces.RippleToDotpaySetting @setting, System.Guid @updateBy)
            {

                return base.InvokeMethodAsync<object>(-110632307, new object[] {@setting, @updateBy} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ISystemSetting", 468577895)]
    internal class SystemSettingMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 468577895;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 468577895:  // ISystemSetting
                        switch (methodId)
                        {
                            case 1231346134: 
                                return ((ISystemSetting)grain).GetRippleToFinancialInstitutionSetting().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -8345625: 
                                return ((ISystemSetting)grain).UpdateRippleToFinancialInstitutionSetting((RippleToFinancialInstitutionSetting)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 643282754: 
                                return ((ISystemSetting)grain).GetRippleToDotpaySetting().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -110632307: 
                                return ((ISystemSetting)grain).UpdateRippleToDotpaySetting((RippleToDotpaySetting)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 468577895:  // ISystemSetting
                    switch (methodId)
                    {
                        case 1231346134:
                            return "GetRippleToFinancialInstitutionSetting";
                    case -8345625:
                            return "UpdateRippleToFinancialInstitutionSetting";
                    case 643282754:
                            return "GetRippleToDotpaySetting";
                    case -110632307:
                            return "UpdateRippleToDotpaySetting";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class TransferTransactionFactory
    {
        

                        public static Dotpay.Actor.Interfaces.ITransferTransaction GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.ITransferTransaction), 250328014, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.ITransferTransaction GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.ITransferTransaction), 250328014, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.ITransferTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return TransferTransactionReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ITransferTransaction")]
        internal class TransferTransactionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.ITransferTransaction
        {
            

            public static Dotpay.Actor.Interfaces.ITransferTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.ITransferTransaction) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.ITransferTransaction), (global::Orleans.Runtime.GrainReference gr) => { return new TransferTransactionReference(gr);}, grainRef, 250328014);
            }
            
            protected internal TransferTransactionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal TransferTransactionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 250328014;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ITransferTransaction";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                TransferTransactionReference input = ((TransferTransactionReference)(original));
                return ((TransferTransactionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                TransferTransactionReference input = ((TransferTransactionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return TransferTransactionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return TransferTransactionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.Initialize(string @sequenceNo, Dotpay.Actor.Interfaces.TransferTransactionInfo @transferTransactionInfo)
            {

                return base.InvokeMethodAsync<object>(-2086181420, new object[] {@sequenceNo, @transferTransactionInfo} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.ConfirmTransactionPreparation()
            {

                return base.InvokeMethodAsync<object>(-1843525063, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.Cancel(Dotpay.Common.Enum.TransferTransactionCancelReason @cancelReason)
            {

                return base.InvokeMethodAsync<object>(1005926811, new object[] {@cancelReason} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.ITransferTransaction.MarkAsProcessing(System.Guid @managerId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-622970921, new object[] {@managerId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.ITransferTransaction.ConfirmComplete(System.Guid @managerId, string @transferTxNo)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-959933622, new object[] {@managerId, @transferTxNo} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.ITransferTransaction.ConfirmFail(System.Guid @managerId, string @reason)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1750574128, new object[] {@managerId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.SubmitToRipple()
            {

                return base.InvokeMethodAsync<object>(-1422131439, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.ReSubmitToRipple()
            {

                return base.InvokeMethodAsync<object>(2094704894, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.RippleTransactionPersubmit(string @rippleTxId, long @lastLedgerIndex)
            {

                return base.InvokeMethodAsync<object>(-784453910, new object[] {@rippleTxId, @lastLedgerIndex} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.RippleTransactionComplete(string @rippleTxId)
            {

                return base.InvokeMethodAsync<object>(-1740166163, new object[] {@rippleTxId} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.ITransferTransaction.RippleTransactionFail(string @rippleTxId, Dotpay.Common.Enum.RippleTransactionFailedType @railedReason)
            {

                return base.InvokeMethodAsync<object>(-1756296834, new object[] {@rippleTxId, @railedReason} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.Enum.TransferTransactionStatus> Dotpay.Actor.Interfaces.ITransferTransaction.GetStatus()
            {

                return base.InvokeMethodAsync<Dotpay.Common.Enum.TransferTransactionStatus>(-1251605435, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.Enum.RippleTransactionStatus> Dotpay.Actor.Interfaces.ITransferTransaction.GetRippleTransactionStatus()
            {

                return base.InvokeMethodAsync<Dotpay.Common.Enum.RippleTransactionStatus>(1706394981, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.TransferTransactionInfo> Dotpay.Actor.Interfaces.ITransferTransaction.GetTransactionInfo()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.TransferTransactionInfo>(1475556748, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.RippleTransactionInfo> Dotpay.Actor.Interfaces.ITransferTransaction.GetRippleTransactionInfo()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.RippleTransactionInfo>(453276867, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.ITransferTransaction", 250328014)]
    internal class TransferTransactionMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 250328014;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 250328014:  // ITransferTransaction
                        switch (methodId)
                        {
                            case -2086181420: 
                                return ((ITransferTransaction)grain).Initialize((String)arguments[0], (TransferTransactionInfo)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1843525063: 
                                return ((ITransferTransaction)grain).ConfirmTransactionPreparation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1005926811: 
                                return ((ITransferTransaction)grain).Cancel((TransferTransactionCancelReason)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -622970921: 
                                return ((ITransferTransaction)grain).MarkAsProcessing((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -959933622: 
                                return ((ITransferTransaction)grain).ConfirmComplete((Guid)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1750574128: 
                                return ((ITransferTransaction)grain).ConfirmFail((Guid)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1422131439: 
                                return ((ITransferTransaction)grain).SubmitToRipple().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2094704894: 
                                return ((ITransferTransaction)grain).ReSubmitToRipple().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -784453910: 
                                return ((ITransferTransaction)grain).RippleTransactionPersubmit((String)arguments[0], (Int64)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1740166163: 
                                return ((ITransferTransaction)grain).RippleTransactionComplete((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1756296834: 
                                return ((ITransferTransaction)grain).RippleTransactionFail((String)arguments[0], (RippleTransactionFailedType)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1251605435: 
                                return ((ITransferTransaction)grain).GetStatus().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1706394981: 
                                return ((ITransferTransaction)grain).GetRippleTransactionStatus().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1475556748: 
                                return ((ITransferTransaction)grain).GetTransactionInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 453276867: 
                                return ((ITransferTransaction)grain).GetRippleTransactionInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 250328014:  // ITransferTransaction
                    switch (methodId)
                    {
                        case -2086181420:
                            return "Initialize";
                    case -1843525063:
                            return "ConfirmTransactionPreparation";
                    case 1005926811:
                            return "Cancel";
                    case -622970921:
                            return "MarkAsProcessing";
                    case -959933622:
                            return "ConfirmComplete";
                    case -1750574128:
                            return "ConfirmFail";
                    case -1422131439:
                            return "SubmitToRipple";
                    case 2094704894:
                            return "ReSubmitToRipple";
                    case -784453910:
                            return "RippleTransactionPersubmit";
                    case -1740166163:
                            return "RippleTransactionComplete";
                    case -1756296834:
                            return "RippleTransactionFail";
                    case -1251605435:
                            return "GetStatus";
                    case 1706394981:
                            return "GetRippleTransactionStatus";
                    case 1475556748:
                            return "GetTransactionInfo";
                    case 453276867:
                            return "GetRippleTransactionInfo";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class UserFactory
    {
        

                        public static Dotpay.Actor.Interfaces.IUser GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IUser), 1071184334, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.IUser GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.IUser), 1071184334, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.IUser Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return UserReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IUser")]
        internal class UserReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.IUser
        {
            

            public static Dotpay.Actor.Interfaces.IUser Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.IUser) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.IUser), (global::Orleans.Runtime.GrainReference gr) => { return new UserReference(gr);}, grainRef, 1071184334);
            }
            
            protected internal UserReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal UserReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1071184334;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IUser";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                UserReference input = ((UserReference)(original));
                return ((UserReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                UserReference input = ((UserReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return UserReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return UserMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IUser.PreRegister(string @email)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1528301820, new object[] {@email} );
            }
            
            System.Threading.Tasks.Task<System.Guid> Dotpay.Actor.Interfaces.IUser.Initialize(string @userAccount, string @loginPassword, string @tradePassword)
            {

                return base.InvokeMethodAsync<System.Guid>(-1600852723, new object[] {@userAccount, @loginPassword, @tradePassword} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IUser.Login(string @loginPassword, string @ip)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1415878300, new object[] {@loginPassword, @ip} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.Lock(long @operatorId, string @reason)
            {

                return base.InvokeMethodAsync<object>(1324219726, new object[] {@operatorId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.Unlock(long @operatorId, string @reason)
            {

                return base.InvokeMethodAsync<object>(1517427903, new object[] {@operatorId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.SetMobile(string @mobile, string @otpKey, string @otp)
            {

                return base.InvokeMethodAsync<object>(1865607900, new object[] {@mobile, @otpKey, @otp} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.SmsCounterIncrease()
            {

                return base.InvokeMethodAsync<object>(-1726317881, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.VeirfyIdentity(string @fullName, Dotpay.Common.IdNoType @idNoType, string @idNo)
            {

                return base.InvokeMethodAsync<object>(193253814, new object[] {@fullName, @idNoType, @idNo} );
            }
            
            System.Threading.Tasks.Task<string> Dotpay.Actor.Interfaces.IUser.ForgetLoginPassword()
            {

                return base.InvokeMethodAsync<System.String>(1603771669, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.ResetLoginPassword(string @newLoginPassword, string @resetToken)
            {

                return base.InvokeMethodAsync<object>(-1146804204, new object[] {@newLoginPassword, @resetToken} );
            }
            
            System.Threading.Tasks.Task<string> Dotpay.Actor.Interfaces.IUser.ForgetPaymentPassword()
            {

                return base.InvokeMethodAsync<System.String>(1340408217, new object[] {} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.IUser.ResetPaymentPassword(string @newPaymentPassword, string @resetToken)
            {

                return base.InvokeMethodAsync<object>(1437379261, new object[] {@newPaymentPassword, @resetToken} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IUser.CheckLoginPassword(string @loginPassword)
            {

                return base.InvokeMethodAsync<System.Boolean>(-1388525298, new object[] {@loginPassword} );
            }
            
            System.Threading.Tasks.Task<bool> Dotpay.Actor.Interfaces.IUser.CheckPaymentPassword(string @tradePassword)
            {

                return base.InvokeMethodAsync<System.Boolean>(-1286558509, new object[] {@tradePassword} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IUser.ChangeLoginPassword(string @oldLoginPassword, string @newLoginPassword)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1632402458, new object[] {@oldLoginPassword, @newLoginPassword} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Interfaces.IUser.ChangePaymentPassword(string @oldPaymentPassword, string @newPaymentPassword, string @smsVerifyCode)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(385697540, new object[] {@oldPaymentPassword, @newPaymentPassword, @smsVerifyCode} );
            }
            
            System.Threading.Tasks.Task<System.Nullable<System.Guid>> Dotpay.Actor.Interfaces.IUser.GetAccountId()
            {

                return base.InvokeMethodAsync<System.Nullable<System.Guid>>(-1535590340, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Interfaces.UserInfo> Dotpay.Actor.Interfaces.IUser.GetUserInfo()
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Interfaces.UserInfo>(-1072947614, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Dotpay.Actor.Interfaces.IUser", 1071184334)]
    internal class UserMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1071184334;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1071184334:  // IUser
                        switch (methodId)
                        {
                            case 1528301820: 
                                return ((IUser)grain).PreRegister((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1600852723: 
                                return ((IUser)grain).Initialize((String)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1415878300: 
                                return ((IUser)grain).Login((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1324219726: 
                                return ((IUser)grain).Lock((Int64)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1517427903: 
                                return ((IUser)grain).Unlock((Int64)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1865607900: 
                                return ((IUser)grain).SetMobile((String)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1726317881: 
                                return ((IUser)grain).SmsCounterIncrease().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 193253814: 
                                return ((IUser)grain).VeirfyIdentity((String)arguments[0], (IdNoType)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1603771669: 
                                return ((IUser)grain).ForgetLoginPassword().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1146804204: 
                                return ((IUser)grain).ResetLoginPassword((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1340408217: 
                                return ((IUser)grain).ForgetPaymentPassword().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1437379261: 
                                return ((IUser)grain).ResetPaymentPassword((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1388525298: 
                                return ((IUser)grain).CheckLoginPassword((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1286558509: 
                                return ((IUser)grain).CheckPaymentPassword((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1632402458: 
                                return ((IUser)grain).ChangeLoginPassword((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 385697540: 
                                return ((IUser)grain).ChangePaymentPassword((String)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1535590340: 
                                return ((IUser)grain).GetAccountId().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1072947614: 
                                return ((IUser)grain).GetUserInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1071184334:  // IUser
                    switch (methodId)
                    {
                        case 1528301820:
                            return "PreRegister";
                    case -1600852723:
                            return "Initialize";
                    case 1415878300:
                            return "Login";
                    case 1324219726:
                            return "Lock";
                    case 1517427903:
                            return "Unlock";
                    case 1865607900:
                            return "SetMobile";
                    case -1726317881:
                            return "SmsCounterIncrease";
                    case 193253814:
                            return "VeirfyIdentity";
                    case 1603771669:
                            return "ForgetLoginPassword";
                    case -1146804204:
                            return "ResetLoginPassword";
                    case 1340408217:
                            return "ForgetPaymentPassword";
                    case 1437379261:
                            return "ResetPaymentPassword";
                    case -1388525298:
                            return "CheckLoginPassword";
                    case -1286558509:
                            return "CheckPaymentPassword";
                    case -1632402458:
                            return "ChangeLoginPassword";
                    case 385697540:
                            return "ChangePaymentPassword";
                    case -1535590340:
                            return "GetAccountId";
                    case -1072947614:
                            return "GetUserInfo";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_MqMessageSerialization
    {
        
        static Dotpay_Actor_Interfaces_MqMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.MqMessage input = ((Dotpay.Actor.Interfaces.MqMessage)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.MqMessage result = new Dotpay.Actor.Interfaces.MqMessage();
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.MqMessage), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_DepositTransactionInfoSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Dotpay_Actor_Interfaces_DepositTransactionInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.DepositTransactionInfo input = ((Dotpay.Actor.Interfaces.DepositTransactionInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AccountId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Memo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.DepositTransactionInfo result = ((Dotpay.Actor.Interfaces.DepositTransactionInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo))));
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo).GetField("<AccountId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo).GetField("<Memo>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Dotpay.Actor.Interfaces.DepositTransactionInfo).GetField("<Payway>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferSourceInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferSourceInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferSourceInfo input = ((Dotpay.Actor.Interfaces.TransferSourceInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferSourceInfo result = new Dotpay.Actor.Interfaces.TransferSourceInfo();
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferSourceInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferFromRippleInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferFromRippleInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferFromRippleInfo input = ((Dotpay.Actor.Interfaces.TransferFromRippleInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TxId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferFromRippleInfo result = new Dotpay.Actor.Interfaces.TransferFromRippleInfo();
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            result.TxId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferFromRippleInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferFromDotpayInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferFromDotpayInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferFromDotpayInfo input = ((Dotpay.Actor.Interfaces.TransferFromDotpayInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AccountId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferFromDotpayInfo result = new Dotpay.Actor.Interfaces.TransferFromDotpayInfo();
            result.AccountId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferFromDotpayInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferToRippleTargetInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferToRippleTargetInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferToRippleTargetInfo input = ((Dotpay.Actor.Interfaces.TransferToRippleTargetInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Destination, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferToRippleTargetInfo result = new Dotpay.Actor.Interfaces.TransferToRippleTargetInfo();
            result.Destination = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferToRippleTargetInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferToDotpayTargetInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferToDotpayTargetInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferToDotpayTargetInfo input = ((Dotpay.Actor.Interfaces.TransferToDotpayTargetInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AccountId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferToDotpayTargetInfo result = new Dotpay.Actor.Interfaces.TransferToDotpayTargetInfo();
            result.AccountId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferToDotpayTargetInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferToTppTargetInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferToTppTargetInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferToTppTargetInfo input = ((Dotpay.Actor.Interfaces.TransferToTppTargetInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DestinationAccount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RealName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferToTppTargetInfo result = new Dotpay.Actor.Interfaces.TransferToTppTargetInfo();
            result.DestinationAccount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            result.RealName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferToTppTargetInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferToBankTargetInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferToBankTargetInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferToBankTargetInfo input = ((Dotpay.Actor.Interfaces.TransferToBankTargetInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Bank, stream, typeof(Dotpay.Common.Enum.Bank));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DestinationAccount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RealName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferToBankTargetInfo result = new Dotpay.Actor.Interfaces.TransferToBankTargetInfo();
            result.Bank = ((Dotpay.Common.Enum.Bank)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Bank), stream)));
            result.DestinationAccount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Payway = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            result.RealName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferToBankTargetInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_RippleToFinancialInstitutionSettingSerialization
    {
        
        static Dotpay_Actor_Interfaces_RippleToFinancialInstitutionSettingSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting input = ((Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FeeRate, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FixedFee, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxFee, stream, typeof(System.Nullable<System.Decimal>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinFee, stream, typeof(System.Nullable<System.Decimal>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting result = new Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting();
            result.FeeRate = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.FixedFee = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MaxAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MaxFee = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            result.MinAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MinFee = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.RippleToFinancialInstitutionSetting), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_RippleToDotpaySettingSerialization
    {
        
        static Dotpay_Actor_Interfaces_RippleToDotpaySettingSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.RippleToDotpaySetting input = ((Dotpay.Actor.Interfaces.RippleToDotpaySetting)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FeeRate, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FixedFee, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxFee, stream, typeof(System.Nullable<System.Decimal>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinFee, stream, typeof(System.Nullable<System.Decimal>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.RippleToDotpaySetting result = new Dotpay.Actor.Interfaces.RippleToDotpaySetting();
            result.FeeRate = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.FixedFee = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MaxAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MaxFee = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            result.MinAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.MinFee = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.RippleToDotpaySetting), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_TransferTransactionInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_TransferTransactionInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.TransferTransactionInfo input = ((Dotpay.Actor.Interfaces.TransferTransactionInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Memo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Source, stream, typeof(Dotpay.Actor.Interfaces.TransferFromDotpayInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Target, stream, typeof(Dotpay.Actor.Interfaces.TransferTargetInfo));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.TransferTransactionInfo result = ((Dotpay.Actor.Interfaces.TransferTransactionInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Interfaces.TransferTransactionInfo))));
            result.Amount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Currency = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            result.Memo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Source = ((Dotpay.Actor.Interfaces.TransferFromDotpayInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Interfaces.TransferFromDotpayInfo), stream)));
            result.Target = ((Dotpay.Actor.Interfaces.TransferTargetInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Interfaces.TransferTargetInfo), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.TransferTransactionInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_RippleTransactionInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_RippleTransactionInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.RippleTransactionInfo input = ((Dotpay.Actor.Interfaces.RippleTransactionInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FailedReason, stream, typeof(Dotpay.Common.Enum.RippleTransactionFailedType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LastLedgerIndex, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RetryCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RippleTxId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.RippleTransactionInfo result = ((Dotpay.Actor.Interfaces.RippleTransactionInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Interfaces.RippleTransactionInfo))));
            result.FailedReason = ((Dotpay.Common.Enum.RippleTransactionFailedType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.RippleTransactionFailedType), stream)));
            result.LastLedgerIndex = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.RetryCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.RippleTxId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.RippleTransactionInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_UserInfoSerialization
    {
        
        static Dotpay_Actor_Interfaces_UserInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Dotpay.Actor.Interfaces.UserInfo input = ((Dotpay.Actor.Interfaces.UserInfo)(original));
            Dotpay.Actor.Interfaces.UserInfo result = ((Dotpay.Actor.Interfaces.UserInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Interfaces.UserInfo))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Email = input.Email;
            result.LoginName = input.LoginName;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.UserInfo input = ((Dotpay.Actor.Interfaces.UserInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Email, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LoginName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.UserInfo result = ((Dotpay.Actor.Interfaces.UserInfo)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Interfaces.UserInfo))));
            result.Email = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.LoginName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.UserInfo), DeepCopier, Serializer, Deserializer);
        }
    }
}
namespace Dotpay.Actor.Tools.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Dotpay.Common.Enum;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RippleRpcClientFactory
    {
        

                        public static Dotpay.Actor.Tools.Interfaces.IRippleRpcClient GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.IRippleRpcClient), -332307583, primaryKey));
                        }

                        public static Dotpay.Actor.Tools.Interfaces.IRippleRpcClient GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.IRippleRpcClient), -332307583, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Tools.Interfaces.IRippleRpcClient Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RippleRpcClientReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IRippleRpcClient")]
        internal class RippleRpcClientReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Tools.Interfaces.IRippleRpcClient
        {
            

            public static Dotpay.Actor.Tools.Interfaces.IRippleRpcClient Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Tools.Interfaces.IRippleRpcClient) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Tools.Interfaces.IRippleRpcClient), (global::Orleans.Runtime.GrainReference gr) => { return new RippleRpcClientReference(gr);}, grainRef, -332307583);
            }
            
            protected internal RippleRpcClientReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RippleRpcClientReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -332307583;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IRippleRpcClient";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RippleRpcClientReference input = ((RippleRpcClientReference)(original));
                return ((RippleRpcClientReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RippleRpcClientReference input = ((RippleRpcClientReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RippleRpcClientReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RippleRpcClientMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<long> Dotpay.Actor.Tools.Interfaces.IRippleRpcClient.GetLastLedgerIndex()
            {

                return base.InvokeMethodAsync<System.Int64>(518081761, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.Enum.RippleTransactionValidateResult> Dotpay.Actor.Tools.Interfaces.IRippleRpcClient.ValidateRippleTx(string @txid)
            {

                return base.InvokeMethodAsync<Dotpay.Common.Enum.RippleTransactionValidateResult>(-1993369799, new object[] {@txid} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IRippleRpcClient", -332307583)]
    internal class RippleRpcClientMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -332307583;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -332307583:  // IRippleRpcClient
                        switch (methodId)
                        {
                            case 518081761: 
                                return ((IRippleRpcClient)grain).GetLastLedgerIndex().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1993369799: 
                                return ((IRippleRpcClient)grain).ValidateRippleTx((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -332307583:  // IRippleRpcClient
                    switch (methodId)
                    {
                        case 518081761:
                            return "GetLastLedgerIndex";
                    case -1993369799:
                            return "ValidateRippleTx";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SequenceNoGeneratorFactory
    {
        

                        public static Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator), -1444614218, primaryKey));
                        }

                        public static Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator), -1444614218, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SequenceNoGeneratorReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator")]
        internal class SequenceNoGeneratorReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator
        {
            

            public static Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator), (global::Orleans.Runtime.GrainReference gr) => { return new SequenceNoGeneratorReference(gr);}, grainRef, -1444614218);
            }
            
            protected internal SequenceNoGeneratorReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SequenceNoGeneratorReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1444614218;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SequenceNoGeneratorReference input = ((SequenceNoGeneratorReference)(original));
                return ((SequenceNoGeneratorReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SequenceNoGeneratorReference input = ((SequenceNoGeneratorReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SequenceNoGeneratorReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SequenceNoGeneratorMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator.GetNext()
            {

                return base.InvokeMethodAsync<System.String>(-629872769, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.ISequenceNoGenerator", -1444614218)]
    internal class SequenceNoGeneratorMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1444614218;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1444614218:  // ISequenceNoGenerator
                        switch (methodId)
                        {
                            case -629872769: 
                                return ((ISequenceNoGenerator)grain).GetNext().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1444614218:  // ISequenceNoGenerator
                    switch (methodId)
                    {
                        case -629872769:
                            return "GetNext";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class AtomicIncrementFactory
    {
        

                        public static Dotpay.Actor.Tools.Interfaces.IAtomicIncrement GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.IAtomicIncrement), -1680962143, primaryKey));
                        }

                        public static Dotpay.Actor.Tools.Interfaces.IAtomicIncrement GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Tools.Interfaces.IAtomicIncrement), -1680962143, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Tools.Interfaces.IAtomicIncrement Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return AtomicIncrementReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IAtomicIncrement")]
        internal class AtomicIncrementReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Tools.Interfaces.IAtomicIncrement
        {
            

            public static Dotpay.Actor.Tools.Interfaces.IAtomicIncrement Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Tools.Interfaces.IAtomicIncrement) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Tools.Interfaces.IAtomicIncrement), (global::Orleans.Runtime.GrainReference gr) => { return new AtomicIncrementReference(gr);}, grainRef, -1680962143);
            }
            
            protected internal AtomicIncrementReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal AtomicIncrementReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1680962143;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IAtomicIncrement";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                AtomicIncrementReference input = ((AtomicIncrementReference)(original));
                return ((AtomicIncrementReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                AtomicIncrementReference input = ((AtomicIncrementReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return AtomicIncrementReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return AtomicIncrementMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Tools.Interfaces.IAtomicIncrement.SetSeed(int @seed)
            {

                return base.InvokeMethodAsync<object>(-172872422, new object[] {@seed} );
            }
            
            System.Threading.Tasks.Task<int> Dotpay.Actor.Tools.Interfaces.IAtomicIncrement.GetNext()
            {

                return base.InvokeMethodAsync<System.Int32>(-629872769, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Tools.Interfaces.Dotpay.Actor.Tools.Interfaces.IAtomicIncrement", -1680962143)]
    internal class AtomicIncrementMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1680962143;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1680962143:  // IAtomicIncrement
                        switch (methodId)
                        {
                            case -172872422: 
                                return ((IAtomicIncrement)grain).SetSeed((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -629872769: 
                                return ((IAtomicIncrement)grain).GetNext().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1680962143:  // IAtomicIncrement
                    switch (methodId)
                    {
                        case -172872422:
                            return "SetSeed";
                    case -629872769:
                            return "GetNext";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace Dotpay.Actor.Service.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Dotpay.Actor.Service.Interfaces;
    using Dotpay.Common.Enum;
    using Dotpay.Common;
    using Dotpay.Actor.Interfaces;
    using Orleans;
    using Orleans.Runtime;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DepositTransactionManagerFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IDepositTransactionManager GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IDepositTransactionManager), -2019605148, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IDepositTransactionManager GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IDepositTransactionManager), -2019605148, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IDepositTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DepositTransactionManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IDepositTransacti" +
            "onManager")]
        internal class DepositTransactionManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IDepositTransactionManager
        {
            

            public static Dotpay.Actor.Service.Interfaces.IDepositTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IDepositTransactionManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IDepositTransactionManager), (global::Orleans.Runtime.GrainReference gr) => { return new DepositTransactionManagerReference(gr);}, grainRef, -2019605148);
            }
            
            protected internal DepositTransactionManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DepositTransactionManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -2019605148;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IDepositTransacti" +
                        "onManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DepositTransactionManagerReference input = ((DepositTransactionManagerReference)(original));
                return ((DepositTransactionManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DepositTransactionManagerReference input = ((DepositTransactionManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DepositTransactionManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DepositTransactionManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IDepositTransactionManager.ProccessRippleDeposit(System.Guid @depositTxId, System.Guid @accountId, Dotpay.Common.Enum.CurrencyType @currency, string @rippleTxId, decimal @amount, Dotpay.Common.Enum.Payway @payway, string @memo)
            {

                return base.InvokeMethodAsync<object>(-2135555547, new object[] {@depositTxId, @accountId, @currency, @rippleTxId, @amount, @payway, @memo} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IDepositTransactionManager.CreateDepositTransaction(System.Guid @depositTxId, System.Guid @accountId, Dotpay.Common.Enum.CurrencyType @currency, decimal @amount, Dotpay.Common.Enum.Payway @payway, string @memo)
            {

                return base.InvokeMethodAsync<object>(-1355174549, new object[] {@depositTxId, @accountId, @currency, @amount, @payway, @memo} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IDepositTransactionManager.ConfirmDepositTransaction(System.Guid @depositTxId, System.Guid @managerId, string @transactionNo)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-261599897, new object[] {@depositTxId, @managerId, @transactionNo} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IDepositTransactionManager.DepositTransactionMarkAsFail(System.Guid @depositTxId, System.Guid @managerId, string @reason)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(56473246, new object[] {@depositTxId, @managerId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IDepositTransactionManager.Receive(Dotpay.Actor.Interfaces.MqMessage @message)
            {

                return base.InvokeMethodAsync<object>(992454065, new object[] {@message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IDepositTransacti" +
        "onManager", -2019605148)]
    internal class DepositTransactionManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -2019605148;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2019605148:  // IDepositTransactionManager
                        switch (methodId)
                        {
                            case -2135555547: 
                                return ((IDepositTransactionManager)grain).ProccessRippleDeposit((Guid)arguments[0], (Guid)arguments[1], (Dotpay.Common.Enum.CurrencyType)arguments[2], (String)arguments[3], (Decimal)arguments[4], (Dotpay.Common.Enum.Payway)arguments[5], (String)arguments[6]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1355174549: 
                                return ((IDepositTransactionManager)grain).CreateDepositTransaction((Guid)arguments[0], (Guid)arguments[1], (Dotpay.Common.Enum.CurrencyType)arguments[2], (Decimal)arguments[3], (Dotpay.Common.Enum.Payway)arguments[4], (String)arguments[5]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -261599897: 
                                return ((IDepositTransactionManager)grain).ConfirmDepositTransaction((Guid)arguments[0], (Guid)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 56473246: 
                                return ((IDepositTransactionManager)grain).DepositTransactionMarkAsFail((Guid)arguments[0], (Guid)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 992454065: 
                                return ((IDepositTransactionManager)grain).Receive((Dotpay.Actor.Interfaces.MqMessage)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -2019605148:  // IDepositTransactionManager
                    switch (methodId)
                    {
                        case -2135555547:
                            return "ProccessRippleDeposit";
                    case -1355174549:
                            return "CreateDepositTransaction";
                    case -261599897:
                            return "ConfirmDepositTransaction";
                    case 56473246:
                            return "DepositTransactionMarkAsFail";
                    case 992454065:
                            return "Receive";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ManagerServiceFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IManagerService GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IManagerService), 616610591, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IManagerService GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IManagerService), 616610591, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IManagerService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ManagerServiceReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IManagerService")]
        internal class ManagerServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IManagerService
        {
            

            public static Dotpay.Actor.Service.Interfaces.IManagerService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IManagerService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IManagerService), (global::Orleans.Runtime.GrainReference gr) => { return new ManagerServiceReference(gr);}, grainRef, 616610591);
            }
            
            protected internal ManagerServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ManagerServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 616610591;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IManagerService";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ManagerServiceReference input = ((ManagerServiceReference)(original));
                return ((ManagerServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ManagerServiceReference input = ((ManagerServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ManagerServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ManagerServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IManagerService.AddManager(string @loginName, string @loginPassword, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-77980335, new object[] {@loginName, @loginPassword, @operatorId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IManagerService.AssginManagerRoles(System.Guid @managerId, System.Collections.Generic.IEnumerable<ManagerType> @roles, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1748967283, new object[] {@managerId, @roles, @operatorId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IManagerService.Lock(System.Guid @managerId, string @reason, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(764799188, new object[] {@managerId, @reason, @operatorId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IManagerService.Unlock(System.Guid @managerId, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-2084981854, new object[] {@managerId, @operatorId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.IManagerService.ResetLoginPassword(System.Guid @managerId, string @newLoginPassword, System.Guid @operatorId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1960555519, new object[] {@managerId, @newLoginPassword, @operatorId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IManagerService", 616610591)]
    internal class ManagerServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 616610591;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 616610591:  // IManagerService
                        switch (methodId)
                        {
                            case -77980335: 
                                return ((IManagerService)grain).AddManager((String)arguments[0], (String)arguments[1], (Guid)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1748967283: 
                                return ((IManagerService)grain).AssginManagerRoles((Guid)arguments[0], (System.Collections.Generic.IEnumerable<ManagerType>)arguments[1], (Guid)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 764799188: 
                                return ((IManagerService)grain).Lock((Guid)arguments[0], (String)arguments[1], (Guid)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2084981854: 
                                return ((IManagerService)grain).Unlock((Guid)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1960555519: 
                                return ((IManagerService)grain).ResetLoginPassword((Guid)arguments[0], (String)arguments[1], (Guid)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 616610591:  // IManagerService
                    switch (methodId)
                    {
                        case -77980335:
                            return "AddManager";
                    case -1748967283:
                            return "AssginManagerRoles";
                    case 764799188:
                            return "Lock";
                    case -2084981854:
                            return "Unlock";
                    case 1960555519:
                            return "ResetLoginPassword";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RefundTransactionManagerFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IRefundTransactionManager GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IRefundTransactionManager), -786618628, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IRefundTransactionManager GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IRefundTransactionManager), -786618628, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IRefundTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RefundTransactionManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRefundTransactio" +
            "nManager")]
        internal class RefundTransactionManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IRefundTransactionManager
        {
            

            public static Dotpay.Actor.Service.Interfaces.IRefundTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IRefundTransactionManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IRefundTransactionManager), (global::Orleans.Runtime.GrainReference gr) => { return new RefundTransactionManagerReference(gr);}, grainRef, -786618628);
            }
            
            protected internal RefundTransactionManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RefundTransactionManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -786618628;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRefundTransactio" +
                        "nManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RefundTransactionManagerReference input = ((RefundTransactionManagerReference)(original));
                return ((RefundTransactionManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RefundTransactionManagerReference input = ((RefundTransactionManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RefundTransactionManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RefundTransactionManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IRefundTransactionManager.Receive(Dotpay.Actor.Interfaces.MqMessage @message)
            {

                return base.InvokeMethodAsync<object>(992454065, new object[] {@message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRefundTransactio" +
        "nManager", -786618628)]
    internal class RefundTransactionManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -786618628;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -786618628:  // IRefundTransactionManager
                        switch (methodId)
                        {
                            case 992454065: 
                                return ((IRefundTransactionManager)grain).Receive((Dotpay.Actor.Interfaces.MqMessage)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -786618628:  // IRefundTransactionManager
                    switch (methodId)
                    {
                        case 992454065:
                            return "Receive";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RippleQuoteServiceFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IRippleQuoteService GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IRippleQuoteService), 2133055338, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IRippleQuoteService GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IRippleQuoteService), 2133055338, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IRippleQuoteService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RippleQuoteServiceReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRippleQuoteServi" +
            "ce")]
        internal class RippleQuoteServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IRippleQuoteService
        {
            

            public static Dotpay.Actor.Service.Interfaces.IRippleQuoteService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IRippleQuoteService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IRippleQuoteService), (global::Orleans.Runtime.GrainReference gr) => { return new RippleQuoteServiceReference(gr);}, grainRef, 2133055338);
            }
            
            protected internal RippleQuoteServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RippleQuoteServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2133055338;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRippleQuoteServi" +
                        "ce";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RippleQuoteServiceReference input = ((RippleQuoteServiceReference)(original));
                return ((RippleQuoteServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RippleQuoteServiceReference input = ((RippleQuoteServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RippleQuoteServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RippleQuoteServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Actor.Service.Interfaces.QuoteResult> Dotpay.Actor.Service.Interfaces.IRippleQuoteService.Quote(Dotpay.Actor.Interfaces.TransferTargetInfo @transferTargetInfo, Dotpay.Common.Enum.CurrencyType @currency, decimal @amount, string @memo)
            {

                return base.InvokeMethodAsync<Dotpay.Actor.Service.Interfaces.QuoteResult>(-1643086377, new object[] {@transferTargetInfo, @currency, @amount, @memo} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IRippleQuoteServi" +
        "ce", 2133055338)]
    internal class RippleQuoteServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2133055338;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2133055338:  // IRippleQuoteService
                        switch (methodId)
                        {
                            case -1643086377: 
                                return ((IRippleQuoteService)grain).Quote((Dotpay.Actor.Interfaces.TransferTargetInfo)arguments[0], (Dotpay.Common.Enum.CurrencyType)arguments[1], (Decimal)arguments[2], (String)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2133055338:  // IRippleQuoteService
                    switch (methodId)
                    {
                        case -1643086377:
                            return "Quote";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class TransferTransactionManagerFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.ITransferTransactionManager GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.ITransferTransactionManager), -590721247, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.ITransferTransactionManager GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.ITransferTransactionManager), -590721247, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.ITransferTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return TransferTransactionManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.ITransferTransact" +
            "ionManager")]
        internal class TransferTransactionManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.ITransferTransactionManager
        {
            

            public static Dotpay.Actor.Service.Interfaces.ITransferTransactionManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.ITransferTransactionManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.ITransferTransactionManager), (global::Orleans.Runtime.GrainReference gr) => { return new TransferTransactionManagerReference(gr);}, grainRef, -590721247);
            }
            
            protected internal TransferTransactionManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal TransferTransactionManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -590721247;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.ITransferTransact" +
                        "ionManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                TransferTransactionManagerReference input = ((TransferTransactionManagerReference)(original));
                return ((TransferTransactionManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                TransferTransactionManagerReference input = ((TransferTransactionManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return TransferTransactionManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return TransferTransactionManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.ITransferTransactionManager.SubmitTransferTransaction(Dotpay.Actor.Interfaces.TransferTransactionInfo @transactionInfo)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1117285809, new object[] {@transactionInfo} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.ITransferTransactionManager.MarkAsProcessing(System.Guid @transferTransactionId, System.Guid @managerId)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-675132736, new object[] {@transferTransactionId, @managerId} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Service.Interfaces.ITransferTransactionManager.ConfirmTransactionFail(System.Guid @transferTransactionId, System.Guid @managerId, string @reason)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(1362925427, new object[] {@transferTransactionId, @managerId, @reason} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.ITransferTransactionManager.Receive(Dotpay.Actor.Interfaces.MqMessage @message)
            {

                return base.InvokeMethodAsync<object>(992454065, new object[] {@message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.ITransferTransact" +
        "ionManager", -590721247)]
    internal class TransferTransactionManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -590721247;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -590721247:  // ITransferTransactionManager
                        switch (methodId)
                        {
                            case 1117285809: 
                                return ((ITransferTransactionManager)grain).SubmitTransferTransaction((Dotpay.Actor.Interfaces.TransferTransactionInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -675132736: 
                                return ((ITransferTransactionManager)grain).MarkAsProcessing((Guid)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1362925427: 
                                return ((ITransferTransactionManager)grain).ConfirmTransactionFail((Guid)arguments[0], (Guid)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 992454065: 
                                return ((ITransferTransactionManager)grain).Receive((Dotpay.Actor.Interfaces.MqMessage)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -590721247:  // ITransferTransactionManager
                    switch (methodId)
                    {
                        case 1117285809:
                            return "SubmitTransferTransaction";
                    case -675132736:
                            return "MarkAsProcessing";
                    case 1362925427:
                            return "ConfirmTransactionFail";
                    case 992454065:
                            return "Receive";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class UserRegisterServiceFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IUserRegisterService GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserRegisterService), -1109877312, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IUserRegisterService GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserRegisterService), -1109877312, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IUserRegisterService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return UserRegisterServiceReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserRegisterServ" +
            "ice")]
        internal class UserRegisterServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IUserRegisterService
        {
            

            public static Dotpay.Actor.Service.Interfaces.IUserRegisterService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IUserRegisterService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserRegisterService), (global::Orleans.Runtime.GrainReference gr) => { return new UserRegisterServiceReference(gr);}, grainRef, -1109877312);
            }
            
            protected internal UserRegisterServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal UserRegisterServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1109877312;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserRegisterServ" +
                        "ice";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                UserRegisterServiceReference input = ((UserRegisterServiceReference)(original));
                return ((UserRegisterServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                UserRegisterServiceReference input = ((UserRegisterServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return UserRegisterServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return UserRegisterServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserRegisterService.PreRegister(string @email, Dotpay.Common.Enum.Lang @lang)
            {

                return base.InvokeMethodAsync<object>(972146848, new object[] {@email, @lang} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserRegisterService.InitUserInfo(long @userId, string @userAccount, string @loginPassword, string @tradePassword)
            {

                return base.InvokeMethodAsync<object>(753550003, new object[] {@userId, @userAccount, @loginPassword, @tradePassword} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserRegisterServ" +
        "ice", -1109877312)]
    internal class UserRegisterServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1109877312;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1109877312:  // IUserRegisterService
                        switch (methodId)
                        {
                            case 972146848: 
                                return ((IUserRegisterService)grain).PreRegister((String)arguments[0], (Dotpay.Common.Enum.Lang)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 753550003: 
                                return ((IUserRegisterService)grain).InitUserInfo((Int64)arguments[0], (String)arguments[1], (String)arguments[2], (String)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1109877312:  // IUserRegisterService
                    switch (methodId)
                    {
                        case 972146848:
                            return "PreRegister";
                    case 753550003:
                            return "InitUserInfo";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class UserResetPasswordServiceFactory
    {
        

                        public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserResetPasswordService), 1229680044, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserResetPasswordService), 1229680044, primaryKey, grainClassNamePrefix));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserResetPasswordService), 1229680044, primaryKey));
                        }

                        public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserResetPasswordService), 1229680044, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return UserResetPasswordServiceReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserResetPasswor" +
            "dService")]
        internal class UserResetPasswordServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Service.Interfaces.IUserResetPasswordService
        {
            

            public static Dotpay.Actor.Service.Interfaces.IUserResetPasswordService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Service.Interfaces.IUserResetPasswordService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Service.Interfaces.IUserResetPasswordService), (global::Orleans.Runtime.GrainReference gr) => { return new UserResetPasswordServiceReference(gr);}, grainRef, 1229680044);
            }
            
            protected internal UserResetPasswordServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal UserResetPasswordServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1229680044;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserResetPasswor" +
                        "dService";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                UserResetPasswordServiceReference input = ((UserResetPasswordServiceReference)(original));
                return ((UserResetPasswordServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                UserResetPasswordServiceReference input = ((UserResetPasswordServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return UserResetPasswordServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return UserResetPasswordServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserResetPasswordService.ForgetLoginPassword(long @userId, Dotpay.Common.Enum.Lang @lang)
            {

                return base.InvokeMethodAsync<object>(1717498359, new object[] {@userId, @lang} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserResetPasswordService.ResetLoginPassword(long @userId, string @newLoginPassword, string @resetToken)
            {

                return base.InvokeMethodAsync<object>(-1852092379, new object[] {@userId, @newLoginPassword, @resetToken} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserResetPasswordService.ForgetPaymentPassword(long @userId, Dotpay.Common.Enum.Lang @lang)
            {

                return base.InvokeMethodAsync<object>(-732924012, new object[] {@userId, @lang} );
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Service.Interfaces.IUserResetPasswordService.ResetPaymentPassword(long @userId, string @newPaymentPassword, string @resetToken)
            {

                return base.InvokeMethodAsync<object>(848970653, new object[] {@userId, @newPaymentPassword, @resetToken} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Service.Interfaces.Dotpay.Actor.Service.Interfaces.IUserResetPasswor" +
        "dService", 1229680044)]
    internal class UserResetPasswordServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1229680044;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1229680044:  // IUserResetPasswordService
                        switch (methodId)
                        {
                            case 1717498359: 
                                return ((IUserResetPasswordService)grain).ForgetLoginPassword((Int64)arguments[0], (Dotpay.Common.Enum.Lang)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1852092379: 
                                return ((IUserResetPasswordService)grain).ResetLoginPassword((Int64)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -732924012: 
                                return ((IUserResetPasswordService)grain).ForgetPaymentPassword((Int64)arguments[0], (Dotpay.Common.Enum.Lang)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 848970653: 
                                return ((IUserResetPasswordService)grain).ResetPaymentPassword((Int64)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1229680044:  // IUserResetPasswordService
                    switch (methodId)
                    {
                        case 1717498359:
                            return "ForgetLoginPassword";
                    case -1852092379:
                            return "ResetLoginPassword";
                    case -732924012:
                            return "ForgetPaymentPassword";
                    case 848970653:
                            return "ResetPaymentPassword";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_ConfirmDepositTransactionMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Dotpay_Actor_Service_Interfaces_ConfirmDepositTransactionMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage input = ((Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DepositTxId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ManagerId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionNo, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage result = ((Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage))));
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage).GetField("<DepositTxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage).GetField("<ManagerId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.ConfirmDepositTransactionMessage).GetField("<TransactionNo>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_RippleDepositTransactionMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static Dotpay_Actor_Service_Interfaces_RippleDepositTransactionMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage input = ((Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AccountId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DepositTxId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Memo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Payway, stream, typeof(Dotpay.Common.Enum.Payway));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RippleTxId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage result = ((Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage))));
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Dotpay.Common.Enum.Payway)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.Payway), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<AccountId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<DepositTxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<Memo>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<Payway>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Dotpay.Actor.Service.Interfaces.RippleDepositTransactionMessage).GetField("<RippleTxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_RefundTransactionMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Dotpay_Actor_Service_Interfaces_RefundTransactionMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.RefundTransactionMessage input = ((Dotpay.Actor.Service.Interfaces.RefundTransactionMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RefundTransactionId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RefundTransactionType, stream, typeof(Dotpay.Common.Enum.RefundTransactionType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionId, stream, typeof(System.Guid));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.RefundTransactionMessage result = ((Dotpay.Actor.Service.Interfaces.RefundTransactionMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.RefundTransactionMessage))));
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Dotpay.Common.Enum.RefundTransactionType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.RefundTransactionType), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.RefundTransactionMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.RefundTransactionMessage).GetField("<RefundTransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.RefundTransactionMessage).GetField("<RefundTransactionType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.RefundTransactionMessage).GetField("<TransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_QuoteResultSerialization
    {
        
        static Dotpay_Actor_Service_Interfaces_QuoteResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.QuoteResult input = ((Dotpay.Actor.Service.Interfaces.QuoteResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ErrorCode, stream, typeof(Dotpay.Common.ErrorCode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Quote, stream, typeof(Dotpay.Actor.Service.Interfaces.Quote));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.QuoteResult result = ((Dotpay.Actor.Service.Interfaces.QuoteResult)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.QuoteResult))));
            result.ErrorCode = ((Dotpay.Common.ErrorCode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.ErrorCode), stream)));
            result.Quote = ((Dotpay.Actor.Service.Interfaces.Quote)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Service.Interfaces.Quote), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.QuoteResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_QuoteSerialization
    {
        
        static Dotpay_Actor_Service_Interfaces_QuoteSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.Quote input = ((Dotpay.Actor.Service.Interfaces.Quote)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DestinationTag, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InvoiceId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SendAmount, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.Quote result = ((Dotpay.Actor.Service.Interfaces.Quote)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.Quote))));
            result.DestinationTag = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.InvoiceId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.SendAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.Quote), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_TransferTransactionMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Dotpay_Actor_Service_Interfaces_TransferTransactionMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.TransferTransactionMessage input = ((Dotpay.Actor.Service.Interfaces.TransferTransactionMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.TransferTransactionMessage result = ((Dotpay.Actor.Service.Interfaces.TransferTransactionMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_SubmitTransferTransactionMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static Dotpay_Actor_Service_Interfaces_SubmitTransferTransactionMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage input = ((Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Memo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Source, stream, typeof(Dotpay.Actor.Interfaces.TransferFromDotpayInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Target, stream, typeof(Dotpay.Actor.Interfaces.TransferTargetInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransferTransactionId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage result = ((Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage))));
            object objResult = ((object)(result));
            object temp1 = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Dotpay.Actor.Interfaces.TransferFromDotpayInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Interfaces.TransferFromDotpayInfo), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Dotpay.Actor.Interfaces.TransferTargetInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Interfaces.TransferTargetInfo), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<Memo>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<Source>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<Target>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionMessage).GetField("<TransferTransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_SubmitTransferTransactionToRippleMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static Dotpay_Actor_Service_Interfaces_SubmitTransferTransactionToRippleMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage input = ((Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Target, stream, typeof(Dotpay.Actor.Interfaces.TransferToRippleTargetInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransferTransactionId, stream, typeof(System.Guid));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage result = ((Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage))));
            object objResult = ((object)(result));
            object temp1 = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Dotpay.Actor.Interfaces.TransferToRippleTargetInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Actor.Interfaces.TransferToRippleTargetInfo), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage).GetField("<Target>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Service.Interfaces.SubmitTransferTransactionToRippleMessage).GetField("<TransferTransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_RippleTransactionPresubmitMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static Dotpay_Actor_Service_Interfaces_RippleTransactionPresubmitMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage input = ((Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LastLedgerIndex, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RippleTxId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransferTransactionId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage result = ((Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage))));
            object objResult = ((object)(result));
            object temp1 = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage).GetField("<LastLedgerIndex>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage).GetField("<RippleTxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionPresubmitMessage).GetField("<TransferTransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Service_Interfaces_RippleTransactionResultMessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Dotpay_Actor_Service_Interfaces_RippleTransactionResultMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage input = ((Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FailedReason, stream, typeof(Dotpay.Common.Enum.RippleTransactionFailedType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RippleTxId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Success, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransferTransactionId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage result = ((Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage))));
            object objResult = ((object)(result));
            object temp1 = ((Dotpay.Common.Enum.RippleTransactionFailedType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.RippleTransactionFailedType), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage).GetField("<FailedReason>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage).GetField("<RippleTxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage).GetField("<Success>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Dotpay.Actor.Service.Interfaces.RippleTransactionResultMessage).GetField("<TransferTransactionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Dotpay.Actor.Service.Interfaces.TransferTransactionMessage).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
namespace Dotpay.Actor.Interfaces.Ripple
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Dotpay.Actor.Interfaces.Ripple;
    using Dotpay.Common.Enum;
    using Orleans;
    using Orleans.Runtime;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RippleToFinancialInstitutionProcessorFactory
    {
        

                        public static Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor), -608710720, primaryKey));
                        }

                        public static Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor), -608710720, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RippleToFinancialInstitutionProcessorReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Interfaces.Ripple.Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialI" +
            "nstitutionProcessor")]
        internal class RippleToFinancialInstitutionProcessorReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor
        {
            

            public static Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor), (global::Orleans.Runtime.GrainReference gr) => { return new RippleToFinancialInstitutionProcessorReference(gr);}, grainRef, -608710720);
            }
            
            protected internal RippleToFinancialInstitutionProcessorReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RippleToFinancialInstitutionProcessorReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -608710720;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Interfaces.Ripple.Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialI" +
                        "nstitutionProcessor";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RippleToFinancialInstitutionProcessorReference input = ((RippleToFinancialInstitutionProcessorReference)(original));
                return ((RippleToFinancialInstitutionProcessorReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RippleToFinancialInstitutionProcessorReference input = ((RippleToFinancialInstitutionProcessorReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RippleToFinancialInstitutionProcessorReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RippleToFinancialInstitutionProcessorMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialInstitutionProcessor.Receive(Dotpay.Actor.Interfaces.MqMessage @message)
            {

                return base.InvokeMethodAsync<object>(992454065, new object[] {@message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Interfaces.Ripple.Dotpay.Actor.Interfaces.Ripple.IRippleToFinancialI" +
        "nstitutionProcessor", -608710720)]
    internal class RippleToFinancialInstitutionProcessorMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -608710720;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -608710720:  // IRippleToFinancialInstitutionProcessor
                        switch (methodId)
                        {
                            case 992454065: 
                                return ((IRippleToFinancialInstitutionProcessor)grain).Receive((Dotpay.Actor.Interfaces.MqMessage)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -608710720:  // IRippleToFinancialInstitutionProcessor
                    switch (methodId)
                    {
                        case 992454065:
                            return "Receive";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Dotpay_Actor_Interfaces_Ripple_RippleToFITxMessageSerialization
    {
        
        static Dotpay_Actor_Interfaces_Ripple_RippleToFITxMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Dotpay.Actor.Interfaces.Ripple.RippleToFITxMessage input = ((Dotpay.Actor.Interfaces.Ripple.RippleToFITxMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(Dotpay.Common.Enum.CurrencyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DestinationTag, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InvoiceId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TxId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Dotpay.Actor.Interfaces.Ripple.RippleToFITxMessage result = new Dotpay.Actor.Interfaces.Ripple.RippleToFITxMessage();
            result.Amount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Currency = ((Dotpay.Common.Enum.CurrencyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dotpay.Common.Enum.CurrencyType), stream)));
            result.DestinationTag = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.InvoiceId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TxId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Dotpay.Actor.Interfaces.Ripple.RippleToFITxMessage), DeepCopier, Serializer, Deserializer);
        }
    }
}
namespace Dotpay.Actor.Ripple.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Dotpay.Common;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RippleToFinancialInstitutionFactory
    {
        

                        public static Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution), 1794200343, primaryKey));
                        }

                        public static Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution), 1794200343, primaryKey, grainClassNamePrefix));
                        }

            public static Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RippleToFinancialInstitutionReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dotpay.Actor.Ripple.Interfaces.Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialI" +
            "nstitution")]
        internal class RippleToFinancialInstitutionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution
        {
            

            public static Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution), (global::Orleans.Runtime.GrainReference gr) => { return new RippleToFinancialInstitutionReference(gr);}, grainRef, 1794200343);
            }
            
            protected internal RippleToFinancialInstitutionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RippleToFinancialInstitutionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1794200343;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Dotpay.Actor.Ripple.Interfaces.Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialI" +
                        "nstitution";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RippleToFinancialInstitutionReference input = ((RippleToFinancialInstitutionReference)(original));
                return ((RippleToFinancialInstitutionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RippleToFinancialInstitutionReference input = ((RippleToFinancialInstitutionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RippleToFinancialInstitutionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1928988877));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RippleToFinancialInstitutionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution.Initialize(string @invoiceId, Dotpay.Actor.Interfaces.TransferToFinancialInstitutionTargetInfo @transferTargetInfo, decimal @amount, decimal @sendAmount, string @memo)
            {

                return base.InvokeMethodAsync<object>(983269032, new object[] {@invoiceId, @transferTargetInfo, @amount, @sendAmount, @memo} );
            }
            
            System.Threading.Tasks.Task<Dotpay.Common.ErrorCode> Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialInstitution.Complete(string @invoiceId, string @txId, decimal @sendAmount)
            {

                return base.InvokeMethodAsync<Dotpay.Common.ErrorCode>(-1382115995, new object[] {@invoiceId, @txId, @sendAmount} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dotpay.Actor.Ripple.Interfaces.Dotpay.Actor.Ripple.Interfaces.IRippleToFinancialI" +
        "nstitution", 1794200343)]
    internal class RippleToFinancialInstitutionMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1794200343;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1794200343:  // IRippleToFinancialInstitution
                        switch (methodId)
                        {
                            case 983269032: 
                                return ((IRippleToFinancialInstitution)grain).Initialize((String)arguments[0], (Dotpay.Actor.Interfaces.TransferToFinancialInstitutionTargetInfo)arguments[1], (Decimal)arguments[2], (Decimal)arguments[3], (String)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1382115995: 
                                return ((IRippleToFinancialInstitution)grain).Complete((String)arguments[0], (String)arguments[1], (Decimal)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1794200343:  // IRippleToFinancialInstitution
                    switch (methodId)
                    {
                        case 983269032:
                            return "Initialize";
                    case -1382115995:
                            return "Complete";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
